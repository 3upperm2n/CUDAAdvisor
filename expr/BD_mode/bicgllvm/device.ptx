//
// Generated by LLVM NVPTX Back-End
//

.version 3.2
.target sm_20
.address_size 64

	.file	1 "/home/dshen/llvm/llvm/lib/Transforms/Hello/expr/BD_mode/bicgllvm/bicg.cu"
	.file	2 "/home/dshen/llvm/llvm/lib/Transforms/Hello/src/ansf.cu"
	.file	3 "/home/dshen/llvm/build/bin/../lib/clang/5.0.0/include/__clang_cuda_math_forward_declares.h"
	.file	4 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h"
	.file	5 "/usr/include/stdlib.h"
	.file	6 "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h"
	.file	7 "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h"
	.file	8 "/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/cstdlib"
	.file	9 "/usr/local/cuda/include/math_functions.hpp"
	.file	10 "/usr/local/cuda/include/device_functions.hpp"
	.file	11 "/home/dshen/llvm/llvm/lib/Transforms/Hello/src/ansf.cu"
	.file	12 "/usr/include/wchar.h"
	.file	13 "/usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/bits/exception_ptr.h"
	.file	14 "/usr/include/locale.h"
	.file	15 "/usr/include/ctype.h"
	.file	16 "/usr/include/stdio.h"
	.file	17 "/usr/include/x86_64-linux-gnu/bits/stdio.h"
	.file	18 "/usr/include/wctype.h"
	// .globl	_Z8mystrcpyPcS_
.extern .func  (.param .b64 func_retval0) malloc
(
	.param .b64 malloc_param_0
)
;
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
;
.extern .func  (.param .b32 func_retval0) vprintf
(
	.param .b64 vprintf_param_0,
	.param .b64 vprintf_param_1
)
;
.extern .func free
(
	.param .b64 free_param_0
)
;
.visible .global .align 4 .u32 CTALB;
.visible .global .align 4 .u32 CTAUB = 99999;
.visible .global .align 4 .u32 CONSTANCE = 128;
.visible .global .align 4 .u32 aliveCTA;
.visible .global .align 1 .u8 VERBOSE;
.visible .global .align 1 .u8 CALLPATHVERBOSE;
.visible .global .align 8 .u64 ccnntt = 1;
.visible .global .align 8 .u64 bbccnntt = 1;
.visible .global .align 8 .u64 buffer_oN_DeViCe;
.visible .global .align 1 .b8 funcDic[465];
.visible .global .align 4 .u32 dicHeight;
.visible .global .align 4 .b8 contextDic[2400];
.visible .global .align 4 .u32 cHeight;
// _ZZ10InitKernelE7handler has been demoted
.global .align 1 .b8 _$_str[16] = {104, 97, 110, 100, 108, 101, 114, 33, 61, 95, 95, 110, 117, 108, 108, 0};
.global .align 1 .b8 _$_str_$_1[56] = {47, 104, 111, 109, 101, 47, 100, 115, 104, 101, 110, 47, 108, 108, 118, 109, 47, 108, 108, 118, 109, 47, 108, 105, 98, 47, 84, 114, 97, 110, 115, 102, 111, 114, 109, 115, 47, 72, 101, 108, 108, 111, 47, 115, 114, 99, 47, 47, 97, 110, 115, 102, 46, 99, 117, 0};
.global .align 1 .b8 __PRETTY_FUNCTION___$_InitKernel[25] = {118, 111, 105, 100, 32, 42, 73, 110, 105, 116, 75, 101, 114, 110, 101, 108, 40, 118, 111, 105, 100, 32, 42, 41, 0};
.global .align 1 .b8 _$_str_$_2[32] = {32, 67, 84, 65, 9, 37, 100, 9, 111, 110, 108, 105, 110, 101, 44, 32, 116, 111, 116, 97, 108, 32, 97, 108, 105, 118, 101, 9, 37, 100, 10, 0};
.global .align 1 .b8 _$_str_$_3[19] = {10, 100, 58, 32, 73, 110, 105, 116, 75, 101, 114, 110, 101, 108, 46, 46, 46, 10, 0};
.global .align 1 .b8 _$_str_$_4[23] = {100, 58, 32, 98, 117, 102, 102, 101, 114, 32, 112, 111, 105, 110, 116, 101, 114, 58, 32, 37, 112, 10, 0};
.global .align 1 .b8 _$_str_$_5[39] = {100, 58, 32, 115, 105, 122, 101, 32, 111, 102, 32, 107, 101, 114, 110, 101, 108, 32, 103, 114, 105, 100, 58, 32, 37, 100, 44, 32, 37, 100, 9, 37, 100, 44, 32, 37, 100, 10, 0};
.global .align 1 .b8 _$_str_$_6[41] = {100, 58, 58, 58, 32, 114, 101, 113, 117, 101, 115, 116, 101, 100, 32, 99, 111, 110, 116, 101, 120, 116, 32, 105, 100, 58, 32, 37, 100, 32, 111, 117, 116, 32, 111, 102, 32, 37, 100, 10, 0};
.global .align 1 .b8 _$_str_$_7[47] = {100, 58, 58, 58, 58, 58, 58, 58, 32, 99, 117, 114, 114, 101, 110, 116, 32, 99, 111, 110, 116, 101, 120, 116, 32, 91, 37, 100, 93, 91, 37, 100, 93, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};
.global .align 1 .b8 _$_str_$_9[15] = {100, 58, 32, 112, 114, 105, 110, 116, 49, 58, 32, 37, 100, 10, 0};
.global .align 1 .b8 _$_str_$_10[15] = {100, 58, 32, 112, 114, 105, 110, 116, 52, 58, 32, 37, 112, 10, 0};
.global .align 1 .b8 _$_str_$_11[32] = {67, 84, 65, 9, 37, 100, 9, 101, 120, 105, 116, 115, 44, 32, 116, 111, 116, 97, 108, 32, 114, 101, 109, 97, 105, 110, 115, 9, 37, 100, 10, 0};
.global .align 1 .b8 _$_str_$_12[25] = {100, 58, 58, 32, 112, 95, 115, 116, 97, 99, 107, 32, 105, 115, 32, 104, 97, 99, 107, 101, 100, 33, 33, 10, 0};
.global .align 1 .b8 _$_str_$_13[20] = {100, 58, 32, 105, 110, 32, 82, 101, 116, 75, 101, 114, 110, 101, 108, 46, 46, 46, 10, 0};
.global .align 1 .b8 _$_str_$_14[56] = {100, 58, 32, 75, 101, 114, 110, 101, 108, 32, 82, 101, 116, 117, 114, 110, 115, 58, 32, 99, 111, 108, 108, 101, 99, 116, 101, 100, 32, 91, 32, 37, 108, 108, 117, 32, 93, 32, 109, 101, 109, 111, 114, 121, 32, 101, 110, 116, 114, 105, 101, 115, 46, 32, 10, 0};
.global .align 1 .b8 _$_str_$_15[57] = {115, 105, 122, 101, 32, 111, 102, 32, 102, 117, 110, 99, 116, 105, 111, 110, 32, 100, 105, 99, 58, 32, 37, 100, 32, 37, 100, 32, 37, 108, 117, 32, 45, 62, 32, 37, 108, 117, 32, 44, 32, 114, 111, 117, 110, 100, 101, 100, 32, 116, 111, 32, 37, 108, 117, 10, 0};
.global .align 1 .b8 _$_str_$_16[56] = {115, 105, 122, 101, 32, 111, 102, 32, 99, 111, 110, 116, 101, 120, 116, 32, 100, 105, 99, 58, 32, 37, 100, 32, 37, 100, 32, 37, 108, 117, 32, 45, 62, 32, 37, 108, 117, 32, 44, 32, 114, 111, 117, 110, 100, 101, 100, 32, 116, 111, 32, 37, 108, 117, 10, 0};
                                        // @_Z8mystrcpyPcS_
.visible .func _Z8mystrcpyPcS_(
	.param .b64 _Z8mystrcpyPcS__param_0,
	.param .b64 _Z8mystrcpyPcS__param_1
)
{
	.reg .pred 	%p<5>;
	.reg .b16 	%rs<6>;
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<13>;

// BB#0:                                // %entry
	//DEBUG_VALUE: mystrcpy:cnt <- 0
	//DEBUG_VALUE: mystrcpy:cnt <- 0
	ld.param.u64 	%rd7, [_Z8mystrcpyPcS__param_1];
	//DEBUG_VALUE: mystrcpy:src <- %vreg9
	ld.param.u64 	%rd12, [_Z8mystrcpyPcS__param_0];
	//DEBUG_VALUE: mystrcpy:dst <- %vreg21
	.loc 11 124 10
	ld.u8 	%rs5, [%rd7];
	.loc 11 124 19
	setp.eq.s16 	%p1, %rs5, 0;
	.loc 11 124 2
	@%p1 bra 	LBB0_4;
// BB#1:                                // %while.body.preheader
	.loc 11 126 12
	add.s64 	%rd1, %rd7, 1;
	mov.u64 	%rd11, 0;
LBB0_2:                                 // %while.body
                                        // =>This Inner Loop Header: Depth=1
	.loc 11 126 12
	add.s64 	%rd9, %rd12, %rd11;
	st.u8 	[%rd9], %rs5;
	.loc 11 124 10
	add.s64 	%rd3, %rd11, 1;
	add.s64 	%rd10, %rd1, %rd11;
	ld.u8 	%rs5, [%rd10];
	.loc 11 124 19
	setp.ne.s16 	%p2, %rs5, 0;
	cvt.u32.u64 	%r1, %rd3;
	.loc 11 124 34
	setp.lt.s32 	%p3, %r1, 30;
	.loc 11 124 27
	and.pred  	%p4, %p3, %p2;
	mov.u64 	%rd11, %rd3;
	.loc 11 124 2
	@%p4 bra 	LBB0_2;
// BB#3:                                // %while.end.loopexit
	.loc 11 129 11
	add.s64 	%rd12, %rd12, %rd3;
LBB0_4:                                 // %while.end
	mov.u16 	%rs4, 0;
	st.u8 	[%rd12], %rs4;
	.loc 11 131 1
	ret;
}

	// .globl	_Z8mystrcmpPcS_
.visible .func  (.param .b32 func_retval0) _Z8mystrcmpPcS_(
	.param .b64 _Z8mystrcmpPcS__param_0,
	.param .b64 _Z8mystrcmpPcS__param_1
)                                       // @_Z8mystrcmpPcS_
{
	.reg .pred 	%p<17>;
	.reg .b16 	%rs<19>;
	.reg .b32 	%r<3>;
	.reg .b64 	%rd<10>;

// BB#0:                                // %entry
	//DEBUG_VALUE: mystrcmp:cnt <- 0
	//DEBUG_VALUE: mystrcmp:cnt <- 0
	ld.param.u64 	%rd6, [_Z8mystrcmpPcS__param_1];
	//DEBUG_VALUE: mystrcmp:src <- %vreg12
	ld.param.u64 	%rd8, [_Z8mystrcmpPcS__param_0];
	//DEBUG_VALUE: mystrcmp:dst <- %vreg14
	.loc 11 136 9
	add.s64 	%rd1, %rd8, 2;
	mov.u64 	%rd2, 0;
	mov.pred 	%p16, -1;
	mov.pred 	%p4, 0;
LBB1_1:                                 // %while.body
                                        // =>This Inner Loop Header: Depth=1
	.loc 11 138 8
	add.s64 	%rd3, %rd1, %rd2;
	ld.u8 	%rs3, [%rd3+-2];
	.loc 11 138 28
	add.s64 	%rd4, %rd6, %rd2;
	ld.u8 	%rs4, [%rd4];
	.loc 11 138 25
	or.b16  	%rs7, %rs4, %rs3;
	and.b16  	%rs8, %rs7, 255;
	setp.eq.s16 	%p3, %rs8, 0;
	@%p3 bra 	LBB1_4;
// BB#2:                                // %if.end
                                        //   in Loop: Header=BB1_1 Depth=1
	.loc 11 141 30
	and.b16  	%rs9, %rs4, 255;
	and.b16  	%rs10, %rs3, 255;
	setp.eq.s16 	%p5, %rs10, %rs9;
	@%p5 bra 	LBB1_5;
	bra.uni 	LBB1_3;
LBB1_5:                                 // %while.cond
                                        //   in Loop: Header=BB1_1 Depth=1
	.loc 11 138 8
	ld.u8 	%rs1, [%rd3+-1];
	.loc 11 138 28
	ld.u8 	%rs2, [%rd4+1];
	.loc 11 138 25
	or.b16  	%rs11, %rs2, %rs1;
	and.b16  	%rs12, %rs11, 255;
	setp.eq.s16 	%p7, %rs12, 0;
	@%p7 bra 	LBB1_4;
// BB#6:                                // %if.end.1
                                        //   in Loop: Header=BB1_1 Depth=1
	.loc 11 141 30
	and.b16  	%rs13, %rs2, 255;
	and.b16  	%rs14, %rs1, 255;
	.loc 11 141 21
	setp.ne.s16 	%p9, %rs14, %rs13;
	@%p9 bra 	LBB1_3;
// BB#7:                                // %while.cond.1
                                        //   in Loop: Header=BB1_1 Depth=1
	.loc 11 138 8
	ld.u8 	%rs5, [%rd3];
	.loc 11 138 28
	ld.u8 	%rs6, [%rd4+2];
	.loc 11 138 25
	or.b16  	%rs15, %rs6, %rs5;
	and.b16  	%rs16, %rs15, 255;
	setp.eq.s16 	%p11, %rs16, 0;
	@%p11 bra 	LBB1_4;
// BB#8:                                // %if.end.2
                                        //   in Loop: Header=BB1_1 Depth=1
	.loc 11 141 30
	and.b16  	%rs17, %rs6, 255;
	and.b16  	%rs18, %rs5, 255;
	.loc 11 141 21
	setp.ne.s16 	%p13, %rs18, %rs17;
	@%p13 bra 	LBB1_3;
// BB#9:                                // %while.cond.2
                                        //   in Loop: Header=BB1_1 Depth=1
	.loc 11 136 21
	add.s64 	%rd2, %rd2, 3;
	cvt.u32.u64 	%r1, %rd2;
	.loc 11 136 21
	setp.lt.s32 	%p15, %r1, 30;
	@%p15 bra 	LBB1_1;
	bra.uni 	LBB1_4;
LBB1_3:
	mov.pred 	%p16, %p4;
LBB1_4:                                 // %cleanup
	.loc 11 146 1
	selp.u32 	%r2, 1, 0, %p16;
	st.param.b32 	[func_retval0+0], %r2;
	ret;
}

	// .globl	_Z9getFuncIDPc
.visible .func  (.param .b32 func_retval0) _Z9getFuncIDPc(
	.param .b64 _Z9getFuncIDPc_param_0
)                                       // @_Z9getFuncIDPc
{
	.reg .pred 	%p<17>;
	.reg .b16 	%rs<22>;
	.reg .b32 	%r<20>;
	.reg .b64 	%rd<49>;

// BB#0:                                // %entry
	ld.param.u64 	%rd20, [_Z9getFuncIDPc_param_0];
	//DEBUG_VALUE: getFuncID:func <- %vreg36
	.loc 11 150 6
	ld.global.u32 	%r1, [dicHeight];
	.loc 11 150 16
	setp.eq.s32 	%p1, %r1, 0;
	.loc 11 150 6
	@%p1 bra 	LBB2_12;
// BB#1:                                // %for.cond.preheader
	//DEBUG_VALUE: i <- 0
	.loc 11 160 2
	setp.lt.s32 	%p2, %r1, 1;
	@%p2 bra 	LBB2_7;
// BB#2:                                // %for.body.preheader
	mov.u64 	%rd22, funcDic;
	add.s64 	%rd6, %rd22, 1;
	mov.u32 	%r19, 0;
	mov.u64 	%rd23, 0;
LBB2_3:                                 // %for.body
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB2_4 Depth 2
	//DEBUG_VALUE: mystrcmp:cnt <- 0
	//DEBUG_VALUE: mystrcmp:cnt <- 0
	mov.u64 	%rd7, %rd6;
	mov.u64 	%rd8, %rd23;
LBB2_4:                                 // %while.body.i37
                                        //   Parent Loop BB2_3 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	.loc 11 138 8
	ld.global.u8 	%rs6, [%rd7+-1];
	//DEBUG_VALUE: mystrcmp:src <- %vreg36
	.loc 11 138 28
	add.s64 	%rd9, %rd20, %rd8;
	ld.u8 	%rs7, [%rd9];
	.loc 11 138 25
	or.b16  	%rs11, %rs7, %rs6;
	and.b16  	%rs12, %rs11, 255;
	setp.eq.s16 	%p3, %rs12, 0;
	@%p3 bra 	LBB2_19;
// BB#5:                                // %if.end.i
                                        //   in Loop: Header=BB2_4 Depth=2
	.loc 11 141 30
	and.b16  	%rs13, %rs7, 255;
	and.b16  	%rs14, %rs6, 255;
	setp.eq.s16 	%p4, %rs14, %rs13;
	@%p4 bra 	LBB2_20;
	bra.uni 	LBB2_6;
LBB2_20:                                // %while.cond.i
                                        //   in Loop: Header=BB2_4 Depth=2
	.loc 11 138 8
	ld.global.u8 	%rs4, [%rd7];
	.loc 11 138 28
	ld.u8 	%rs5, [%rd9+1];
	.loc 11 138 25
	or.b16  	%rs15, %rs5, %rs4;
	and.b16  	%rs16, %rs15, 255;
	setp.eq.s16 	%p5, %rs16, 0;
	@%p5 bra 	LBB2_19;
// BB#21:                               // %if.end.i.1
                                        //   in Loop: Header=BB2_4 Depth=2
	.loc 11 141 30
	and.b16  	%rs17, %rs5, 255;
	and.b16  	%rs18, %rs4, 255;
	.loc 11 141 21
	setp.ne.s16 	%p6, %rs18, %rs17;
	@%p6 bra 	LBB2_6;
// BB#22:                               // %while.cond.i.1
                                        //   in Loop: Header=BB2_4 Depth=2
	.loc 11 136 21
	add.s64 	%rd8, %rd8, 2;
	cvt.u32.u64 	%r10, %rd8;
	.loc 11 136 21
	add.s64 	%rd7, %rd7, 2;
	setp.lt.s32 	%p12, %r10, 30;
	@%p12 bra 	LBB2_4;
	bra.uni 	LBB2_19;
LBB2_6:                                 // %for.inc
                                        //   in Loop: Header=BB2_3 Depth=1
	.loc 11 160 31
	add.s32 	%r19, %r19, 1;
	//DEBUG_VALUE: i <- %vreg103
	//DEBUG_VALUE: i <- %vreg103
	.loc 11 160 2
	add.s64 	%rd6, %rd6, 31;
	.loc 11 160 17
	setp.lt.s32 	%p7, %r19, %r1;
	@%p7 bra 	LBB2_3;
LBB2_7:                                 // %for.end
	.loc 11 150 6
	cvt.s64.s32 	%rd1, %r1;
	//DEBUG_VALUE: mystrcpy:cnt <- 0
	//DEBUG_VALUE: mystrcpy:cnt <- 0
	//DEBUG_VALUE: mystrcpy:src <- %vreg36
	.loc 11 170 11
	mul.lo.s64 	%rd24, %rd1, 31;
	mov.u64 	%rd25, funcDic;
	add.s64 	%rd48, %rd25, %rd24;
	.loc 11 124 10
	ld.u8 	%rs21, [%rd20];
	.loc 11 124 19
	setp.eq.s16 	%p8, %rs21, 0;
	@%p8 bra 	LBB2_11;
// BB#8:                                // %while.body.i31.preheader
	.loc 11 126 12
	add.s64 	%rd12, %rd20, 1;
	mov.u64 	%rd47, 0;
LBB2_9:                                 // %while.body.i31
                                        // =>This Inner Loop Header: Depth=1
	.loc 11 126 12
	add.s64 	%rd27, %rd48, %rd47;
	st.global.u8 	[%rd27], %rs21;
	.loc 11 124 10
	add.s64 	%rd14, %rd47, 1;
	add.s64 	%rd28, %rd12, %rd47;
	ld.u8 	%rs21, [%rd28];
	.loc 11 124 19
	setp.ne.s16 	%p9, %rs21, 0;
	cvt.u32.u64 	%r9, %rd14;
	.loc 11 124 34
	setp.lt.s32 	%p10, %r9, 30;
	.loc 11 124 27
	and.pred  	%p11, %p10, %p9;
	mov.u64 	%rd47, %rd14;
	@%p11 bra 	LBB2_9;
// BB#10:                               // %return.sink.split.loopexit58
	.loc 11 129 11
	add.s64 	%rd48, %rd48, %rd14;
LBB2_11:                                // %return.sink.split
	mov.u32 	%r19, %r1;
	bra.uni 	LBB2_18;
LBB2_12:                                // %if.then
	.loc 11 124 10
	ld.u8 	%rs20, [%rd20];
	//DEBUG_VALUE: mystrcpy:cnt <- 0
	//DEBUG_VALUE: mystrcpy:cnt <- 0
	//DEBUG_VALUE: mystrcpy:src <- %vreg36
	mov.u64 	%rd30, funcDic;
	cvta.global.u64 	%rd31, %rd30;
	//DEBUG_VALUE: mystrcpy:dst <- %vreg71
	.loc 11 124 19
	setp.eq.s16 	%p13, %rs20, 0;
	@%p13 bra 	LBB2_13;
// BB#14:                               // %while.body.i.preheader
	cvta.to.global.u64 	%rd43, %rd31;
	mov.u32 	%r16, 0;
	mov.u64 	%rd42, 1;
LBB2_15:                                // %while.body.i
                                        // =>This Inner Loop Header: Depth=1
	.loc 11 126 12
	st.global.u8 	[%rd43], %rs20;
	.loc 11 127 6
	add.s32 	%r3, %r16, 1;
	//DEBUG_VALUE: mystrcpy:cnt <- %vreg7
	//DEBUG_VALUE: mystrcpy:cnt <- %vreg7
	.loc 11 124 10
	cvt.s64.s32 	%rd36, %r16;
	add.s64 	%rd37, %rd20, %rd42;
	ld.u8 	%rs20, [%rd37];
	.loc 11 124 19
	setp.ne.s16 	%p14, %rs20, 0;
	cvt.u32.u64 	%r13, %rd42;
	.loc 11 124 34
	setp.lt.s32 	%p15, %r13, 30;
	.loc 11 124 27
	and.pred  	%p16, %p15, %p14;
	add.s64 	%rd39, %rd30, %rd36;
	add.s64 	%rd43, %rd39, 1;
	.loc 11 124 2
	add.s64 	%rd42, %rd42, 1;
	mov.u32 	%r16, %r3;
	.loc 11 124 2
	@%p16 bra 	LBB2_15;
// BB#16:                               // %return.sink.split.loopexit
	.loc 11 129 11
	add.s64 	%rd41, %rd30, %rd42;
	add.s64 	%rd48, %rd41, -1;
	bra.uni 	LBB2_17;
LBB2_13:
	cvta.to.global.u64 	%rd48, %rd31;
LBB2_17:                                // %return.sink.split
	mov.u32 	%r19, 0;
LBB2_18:                                // %return.sink.split
	.loc 11 129 11
	mov.u16 	%rs19, 0;
	st.global.u8 	[%rd48], %rs19;
	add.s32 	%r15, %r1, 1;
	st.global.u32 	[dicHeight], %r15;
LBB2_19:                                // %return
	st.param.b32 	[func_retval0+0], %r19;
	.loc 11 173 1
	ret;
}

	// .globl	_Z15updateCallStackiissiiPv
.visible .func _Z15updateCallStackiissiiPv(
	.param .b32 _Z15updateCallStackiissiiPv_param_0,
	.param .b32 _Z15updateCallStackiissiiPv_param_1,
	.param .b32 _Z15updateCallStackiissiiPv_param_2,
	.param .b32 _Z15updateCallStackiissiiPv_param_3,
	.param .b32 _Z15updateCallStackiissiiPv_param_4,
	.param .b32 _Z15updateCallStackiissiiPv_param_5,
	.param .b64 _Z15updateCallStackiissiiPv_param_6
)                                       // @_Z15updateCallStackiissiiPv
{
	.reg .pred 	%p<11>;
	.reg .b16 	%rs<5>;
	.reg .b32 	%r<14>;
	.reg .b64 	%rd<19>;

// BB#0:                                // %entry
	ld.param.u64 	%rd6, [_Z15updateCallStackiissiiPv_param_6];
	//DEBUG_VALUE: updateCallStack:p_stackzone <- %vreg14
	ld.param.u16 	%rs2, [_Z15updateCallStackiissiiPv_param_3];
	//DEBUG_VALUE: updateCallStack:scolm <- %vreg13
	ld.param.u16 	%rs1, [_Z15updateCallStackiissiiPv_param_2];
	//DEBUG_VALUE: updateCallStack:sline <- %vreg12
	//DEBUG_VALUE: updateCallStack:bytesPerThread <- 120
	ld.param.u32 	%r7, [_Z15updateCallStackiissiiPv_param_1];
	//DEBUG_VALUE: updateCallStack:callee <- %vreg11
	ld.param.u32 	%r6, [_Z15updateCallStackiissiiPv_param_0];
	//DEBUG_VALUE: updateCallStack:caller <- %vreg10
	.loc 11 194 13
	ld.u32 	%r1, [%rd6+136];
	.loc 11 194 13
	setp.ne.s32 	%p1, %r1, 0;
	@%p1 bra 	LBB3_2;
	bra.uni 	LBB3_1;
LBB3_2:                                 // %if.end
	.loc 11 194 13
	cvt.s64.s32 	%rd1, %r1;
	.loc 11 209 44
	shl.b64 	%rd7, %rd1, 3;
	add.s64 	%rd2, %rd6, %rd7;
	ld.u32 	%r2, [%rd2+-16];
	//DEBUG_VALUE: updateCallStack:p_caller <- %vreg3
	.loc 11 210 44
	ld.u32 	%r3, [%rd2+-8];
	//DEBUG_VALUE: updateCallStack:p_callee <- %vreg4
	.loc 11 212 23
	setp.eq.s32 	%p2, %r2, %r6;
	.loc 11 212 45
	setp.eq.s32 	%p3, %r3, %r7;
	.loc 11 212 33
	and.pred  	%p4, %p2, %p3;
	@!%p4 bra 	LBB3_4;
	bra.uni 	LBB3_3;
LBB3_3:                                 // %if.then22
	.loc 11 218 17
	st.v2.u16 	[%rd2+-12], {%rs1, %rs2};
	.loc 11 264 1
	ret;
LBB3_1:                                 // %if.then
	.loc 11 198 19
	st.u32 	[%rd6], %r6;
	.loc 11 202 3
	st.v2.u16 	[%rd6+4], {%rs1, %rs2};
	.loc 11 202 19
	st.u32 	[%rd6+8], %r7;
	.loc 11 205 9
	mov.u16 	%rs4, -1;
	st.v2.u16 	[%rd6+12], {%rs4, %rs4};
	mov.u32 	%r12, 2;
	st.u32 	[%rd6+136], %r12;
	.loc 11 264 1
	ret;
LBB3_4:                                 // %if.else
	.loc 11 220 38
	setp.ne.s32 	%p6, %r2, %r6;
	or.pred  	%p7, %p3, %p6;
	@%p7 bra 	LBB3_6;
	bra.uni 	LBB3_5;
LBB3_6:                                 // %if.else47
	.loc 11 229 28
	setp.eq.s32 	%p8, %r3, %r6;
	.loc 11 229 19
	@%p8 bra 	LBB3_12;
	bra.uni 	LBB3_7;
LBB3_12:                                // %if.then49
	.loc 11 236 17
	st.v2.u16 	[%rd2+-4], {%rs1, %rs2};
	.loc 11 236 38
	st.u32 	[%rd2], %r7;
	.loc 11 237 27
	ld.u32 	%r10, [%rd6+136];
	.loc 11 237 35
	mul.wide.s32 	%rd14, %r10, 8;
	add.s64 	%rd15, %rd6, %rd14;
	.loc 11 239 9
	mov.u16 	%rs3, -1;
	st.v2.u16 	[%rd15+4], {%rs3, %rs3};
	add.s32 	%r11, %r10, 1;
	st.u32 	[%rd6+136], %r11;
	.loc 11 264 1
	ret;
LBB3_5:                                 // %if.then34
	.loc 11 224 40
	st.u32 	[%rd2+-8], %r7;
	.loc 11 225 27
	ld.u32 	%r8, [%rd6+136];
	.loc 11 225 37
	mul.wide.s32 	%rd8, %r8, 8;
	add.s64 	%rd9, %rd6, %rd8;
	.loc 11 227 17
	st.v2.u16 	[%rd9+-12], {%rs1, %rs2};
	.loc 11 264 1
	ret;
LBB3_7:                                 // %for.cond.preheader
	add.s64 	%rd18, %rd2, 4;
LBB3_8:                                 // %for.cond
                                        // =>This Inner Loop Header: Depth=1
	mov.u32 	%r4, %r1;
	.loc 11 247 9
	setp.lt.s32 	%p9, %r4, 1;
	@%p9 bra 	LBB3_11;
// BB#9:                                // %for.body
                                        //   in Loop: Header=BB3_8 Depth=1
	add.s32 	%r1, %r4, -1;
	//DEBUG_VALUE: i <- %vreg0
	.loc 11 249 35
	ld.u32 	%r9, [%rd18+-12];
	.loc 11 249 22
	add.s64 	%rd18, %rd18, -8;
	setp.ne.s32 	%p10, %r9, %r6;
	@%p10 bra 	LBB3_8;
// BB#10:                               // %if.then76
	.loc 11 251 11
	st.u32 	[%rd6+136], %r4;
	.loc 11 252 41
	st.u32 	[%rd18+-4], %r7;
	st.v2.u16 	[%rd18], {%rs1, %rs2};
LBB3_11:                                // %cleanup96
	.loc 11 264 1
	ret;
}

	// .globl	InitKernel
.visible .func  (.param .b64 func_retval0) InitKernel(
	.param .b64 InitKernel_param_0
)                                       // @InitKernel
{
	.local .align 8 .b8 	__local_depot4[32];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<7>;
	.reg .b32 	%r<22>;
	.reg .b64 	%rd<38>;
	// demoted variable
	.shared .align 8 .u64 _ZZ10InitKernelE7handler;
// BB#0:                                // %entry
	mov.u64 	%SPL, __local_depot4;
	cvta.local.u64 	%SP, %SPL;
	mov.u32 	%r6, %ctaid.x;
	mov.u32 	%r7, %ctaid.y;
	mov.u32 	%r1, %nctaid.x;
	.loc 11 285 19
	mad.lo.s32 	%r2, %r1, %r7, %r6;
	//DEBUG_VALUE: InitKernel:bid <- %vreg11
	.loc 11 285 45
	ld.global.u32 	%r8, [CTALB];
	.loc 11 285 43
	setp.lt.u32 	%p1, %r2, %r8;
	mov.u64 	%rd37, 0;
	.loc 11 285 51
	@%p1 bra 	LBB4_10;
// BB#1:                                // %lor.lhs.false
	.loc 11 285 92
	ld.global.u32 	%r9, [CTAUB];
	.loc 11 285 90
	setp.gt.u32 	%p2, %r2, %r9;
	.loc 11 285 7
	@%p2 bra 	LBB4_10;
// BB#2:                                // %if.end
	ld.param.u64 	%rd13, [InitKernel_param_0];
	//DEBUG_VALUE: InitKernel:ptrhead <- %vreg17
	mov.u32 	%r10, %tid.x;
	mov.u32 	%r11, %tid.y;
	mov.u32 	%r3, %ntid.x;
	.loc 11 288 31
	mad.lo.s32 	%r4, %r3, %r11, %r10;
	//DEBUG_VALUE: InitKernel:tid <- %vreg13
	.loc 11 295 2
	bar.sync 	0;
	//DEBUG_VALUE: InitKernel:bytesPerThread <- 152
	.loc 11 297 7
	setp.ne.s32 	%p3, %r4, 0;
	@%p3 bra 	LBB4_9;
	bra.uni 	LBB4_3;
LBB4_9:                                 // %if.end51
	.loc 11 317 2
	bar.sync 	0;
	.loc 11 319 29
	ld.shared.u64 	%rd34, [_ZZ10InitKernelE7handler];
	.loc 11 319 53
	mul.lo.s32 	%r20, %r4, 152;
	.loc 11 319 37
	cvt.u64.u32 	%rd35, %r20;
	add.s64 	%rd37, %rd34, %rd35;
	//DEBUG_VALUE: InitKernel:stackzone <- %vreg63
LBB4_10:                                // %return
	st.param.b64 	[func_retval0+0], %rd37;
	.loc 11 400 1
	ret;
LBB4_3:                                 // %if.then31
	mov.u32 	%r5, %ntid.y;
	.loc 11 299 39
	mul.lo.s32 	%r12, %r3, %r5;
	.loc 11 299 50
	mul.lo.s32 	%r13, %r12, 152;
	.loc 11 299 29
	cvt.u64.u32 	%rd26, %r13;
	.loc 11 299 21
	{ // callseq 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd26;
	.param .b64 retval0;
	call.uni (retval0), 
	malloc, 
	(
	param0
	);
	ld.param.b64 	%rd27, [retval0+0];
	} // callseq 0
	.loc 11 299 11
	st.shared.u64 	[_ZZ10InitKernelE7handler], %rd27;
	.loc 11 300 3
	setp.ne.s64 	%p4, %rd27, 0;
	@%p4 bra 	LBB4_5;
	bra.uni 	LBB4_4;
LBB4_5:                                 // %cond.end
	mov.u64 	%rd18, _$_str_$_2;
	cvta.global.u64 	%rd4, %rd18;
	add.u64 	%rd22, %SP, 0;
	add.u64 	%rd8, %SPL, 0;
	.loc 10 1514 10
	mov.u64 	%rd28, aliveCTA;
	atom.global.add.u32 	%r14, [%rd28], 1;
	//DEBUG_VALUE: rank <- %vreg44
	.loc 11 303 3
	st.local.v2.u32 	[%rd8], {%r2, %r14};
	{ // callseq 1
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd4;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd22;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r15, [retval0+0];
	} // callseq 1
	.loc 11 304 7
	setp.eq.s32 	%p5, %r14, 1;
	@%p5 bra 	LBB4_8;
// BB#6:                                // %cond.end
	setp.ne.s32 	%p6, %r14, 0;
	@%p6 bra 	LBB4_9;
// BB#7:                                // %if.then40
	mov.u64 	%rd19, _$_str_$_3;
	cvta.global.u64 	%rd5, %rd19;
	mov.u64 	%rd20, _$_str_$_4;
	cvta.global.u64 	%rd6, %rd20;
	mov.u64 	%rd21, _$_str_$_5;
	cvta.global.u64 	%rd7, %rd21;
	add.u64 	%rd23, %SP, 8;
	add.u64 	%rd9, %SPL, 8;
	add.u64 	%rd24, %SP, 16;
	add.u64 	%rd10, %SPL, 16;
	mov.u64 	%rd30, 0;
	.loc 11 309 5
	{ // callseq 2
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd5;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd30;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r16, [retval0+0];
	} // callseq 2
	.loc 11 310 39
	ld.global.u64 	%rd31, [buffer_oN_DeViCe];
	.loc 11 310 5
	st.local.u64 	[%rd9], %rd31;
	{ // callseq 3
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd6;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd23;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r17, [retval0+0];
	} // callseq 3
	mov.u32 	%r18, %nctaid.y;
	.loc 11 311 5
	st.local.u32 	[%rd10], %r1;
	st.local.u32 	[%rd10+4], %r18;
	st.local.u32 	[%rd10+8], %r3;
	st.local.u32 	[%rd10+12], %r5;
	.loc 11 311 5
	{ // callseq 4
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd7;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd24;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r19, [retval0+0];
	} // callseq 4
	bra.uni 	LBB4_9;
LBB4_8:                                 // %if.then49
	.loc 11 315 21
	st.global.u64 	[buffer_oN_DeViCe], %rd13;
	bra.uni 	LBB4_9;
LBB4_4:                                 // %cond.false
	mov.u64 	%rd15, _$_str;
	cvta.global.u64 	%rd1, %rd15;
	mov.u64 	%rd16, _$_str_$_1;
	cvta.global.u64 	%rd2, %rd16;
	mov.u64 	%rd17, __PRETTY_FUNCTION___$_InitKernel;
	cvta.global.u64 	%rd3, %rd17;
	mov.u32 	%r21, 300;
	mov.u64 	%rd36, 1;
	{ // callseq 5
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd1;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd2;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r21;
	.param .b64 param3;
	st.param.b64 	[param3+0], %rd3;
	.param .b64 param4;
	st.param.b64 	[param4+0], %rd36;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 5
}

	// .globl	callFunc
.visible .func callFunc(
	.param .b64 callFunc_param_0,
	.param .b64 callFunc_param_1,
	.param .b32 callFunc_param_2,
	.param .b32 callFunc_param_3,
	.param .b64 callFunc_param_4
)                                       // @callFunc
{
	.reg .pred 	%p<43>;
	.reg .b16 	%rs<47>;
	.reg .b32 	%r<45>;
	.reg .b64 	%rd<96>;

// BB#0:                                // %entry
	ld.param.u64 	%rd43, [callFunc_param_4];
	//DEBUG_VALUE: callFunc:p_stackzone <- %vreg82
	ld.param.u32 	%r18, [callFunc_param_3];
	//DEBUG_VALUE: callFunc:scolm <- %vreg81
	ld.param.u32 	%r17, [callFunc_param_2];
	//DEBUG_VALUE: callFunc:sline <- %vreg80
	ld.param.u64 	%rd42, [callFunc_param_1];
	//DEBUG_VALUE: callFunc:ee <- %vreg79
	ld.param.u64 	%rd41, [callFunc_param_0];
	//DEBUG_VALUE: callFunc:er <- %vreg78
	//DEBUG_VALUE: getFuncID:func <- %vreg78
	.loc 11 150 6
	ld.global.u32 	%r39, [dicHeight];
	.loc 11 150 16
	setp.eq.s32 	%p1, %r39, 0;
	.loc 11 150 6
	@%p1 bra 	LBB5_12;
// BB#1:                                // %for.cond.preheader.i
	//DEBUG_VALUE: i <- 0
	.loc 11 160 2
	setp.lt.s32 	%p2, %r39, 1;
	@%p2 bra 	LBB5_7;
// BB#2:                                // %for.body.i.preheader
	mov.u64 	%rd45, funcDic;
	add.s64 	%rd5, %rd45, 1;
	mov.u32 	%r7, 0;
	mov.u64 	%rd46, 0;
LBB5_3:                                 // %for.body.i
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB5_4 Depth 2
	//DEBUG_VALUE: mystrcmp:cnt <- 0
	//DEBUG_VALUE: mystrcmp:cnt <- 0
	mov.u64 	%rd6, %rd5;
	mov.u64 	%rd7, %rd46;
LBB5_4:                                 // %while.body.i37.i
                                        //   Parent Loop BB5_3 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	.loc 11 138 8
	ld.global.u8 	%rs6, [%rd6+-1];
	//DEBUG_VALUE: mystrcmp:src <- %vreg78
	.loc 11 138 28
	add.s64 	%rd8, %rd41, %rd7;
	ld.u8 	%rs7, [%rd8];
	.loc 11 138 25
	or.b16  	%rs23, %rs7, %rs6;
	and.b16  	%rs24, %rs23, 255;
	setp.eq.s16 	%p3, %rs24, 0;
	@%p3 bra 	LBB5_18;
// BB#5:                                // %if.end.i.i
                                        //   in Loop: Header=BB5_4 Depth=2
	.loc 11 141 30
	and.b16  	%rs25, %rs7, 255;
	and.b16  	%rs26, %rs6, 255;
	setp.eq.s16 	%p4, %rs26, %rs25;
	@%p4 bra 	LBB5_51;
	bra.uni 	LBB5_6;
LBB5_51:                                // %while.cond.i.i
                                        //   in Loop: Header=BB5_4 Depth=2
	.loc 11 138 8
	ld.global.u8 	%rs4, [%rd6];
	.loc 11 138 28
	ld.u8 	%rs5, [%rd8+1];
	.loc 11 138 25
	or.b16  	%rs27, %rs5, %rs4;
	and.b16  	%rs28, %rs27, 255;
	setp.eq.s16 	%p5, %rs28, 0;
	@%p5 bra 	LBB5_18;
// BB#52:                               // %if.end.i.i.1
                                        //   in Loop: Header=BB5_4 Depth=2
	.loc 11 141 30
	and.b16  	%rs29, %rs5, 255;
	and.b16  	%rs30, %rs4, 255;
	.loc 11 141 21
	setp.ne.s16 	%p6, %rs30, %rs29;
	@%p6 bra 	LBB5_6;
// BB#53:                               // %while.cond.i.i.1
                                        //   in Loop: Header=BB5_4 Depth=2
	.loc 11 136 21
	add.s64 	%rd7, %rd7, 2;
	cvt.u32.u64 	%r21, %rd7;
	.loc 11 136 21
	add.s64 	%rd6, %rd6, 2;
	setp.lt.s32 	%p12, %r21, 30;
	@%p12 bra 	LBB5_4;
	bra.uni 	LBB5_18;
LBB5_6:                                 // %for.inc.i
                                        //   in Loop: Header=BB5_3 Depth=1
	.loc 11 160 31
	add.s32 	%r7, %r7, 1;
	//DEBUG_VALUE: i <- %vreg32
	//DEBUG_VALUE: i <- %vreg32
	.loc 11 160 2
	add.s64 	%rd5, %rd5, 31;
	.loc 11 160 17
	setp.lt.s32 	%p7, %r7, %r39;
	@%p7 bra 	LBB5_3;
LBB5_7:                                 // %for.end.i
	.loc 11 150 6
	cvt.s64.s32 	%rd1, %r39;
	//DEBUG_VALUE: mystrcpy:cnt <- 0
	//DEBUG_VALUE: mystrcpy:cnt <- 0
	//DEBUG_VALUE: mystrcpy:src <- %vreg78
	.loc 11 170 11
	mul.lo.s64 	%rd47, %rd1, 31;
	mov.u64 	%rd48, funcDic;
	add.s64 	%rd88, %rd48, %rd47;
	.loc 11 124 10
	ld.u8 	%rs44, [%rd41];
	.loc 11 124 19
	setp.eq.s16 	%p8, %rs44, 0;
	@%p8 bra 	LBB5_11;
// BB#8:                                // %while.body.i31.i.preheader
	.loc 11 126 12
	add.s64 	%rd11, %rd41, 1;
	mov.u64 	%rd87, 0;
LBB5_9:                                 // %while.body.i31.i
                                        // =>This Inner Loop Header: Depth=1
	.loc 11 126 12
	add.s64 	%rd50, %rd88, %rd87;
	st.global.u8 	[%rd50], %rs44;
	.loc 11 124 10
	add.s64 	%rd13, %rd87, 1;
	add.s64 	%rd51, %rd11, %rd87;
	ld.u8 	%rs44, [%rd51];
	.loc 11 124 19
	setp.ne.s16 	%p9, %rs44, 0;
	cvt.u32.u64 	%r20, %rd13;
	.loc 11 124 34
	setp.lt.s32 	%p10, %r20, 30;
	.loc 11 124 27
	and.pred  	%p11, %p10, %p9;
	mov.u64 	%rd87, %rd13;
	@%p11 bra 	LBB5_9;
// BB#10:                               // %return.sink.split.i.loopexit100
	.loc 11 129 11
	add.s64 	%rd88, %rd88, %rd13;
LBB5_11:                                // %return.sink.split.i
	mov.u32 	%r7, %r39;
	bra.uni 	LBB5_17;
LBB5_12:                                // %if.then.i
	//DEBUG_VALUE: mystrcpy:cnt <- 0
	//DEBUG_VALUE: mystrcpy:cnt <- 0
	//DEBUG_VALUE: mystrcpy:src <- %vreg78
	.loc 11 124 10
	ld.u8 	%rs43, [%rd41];
	.loc 11 124 19
	setp.eq.s16 	%p13, %rs43, 0;
	mov.u32 	%r7, 0;
	@%p13 bra 	LBB5_13;
// BB#14:                               // %while.body.i.i.preheader
	.loc 11 126 12
	add.s64 	%rd2, %rd41, 1;
	mov.u64 	%rd83, 0;
LBB5_15:                                // %while.body.i.i
                                        // =>This Inner Loop Header: Depth=1
	.loc 11 126 12
	mov.u64 	%rd54, funcDic;
	add.s64 	%rd55, %rd54, %rd83;
	st.global.u8 	[%rd55], %rs43;
	.loc 11 124 10
	add.s64 	%rd4, %rd83, 1;
	add.s64 	%rd56, %rd2, %rd83;
	ld.u8 	%rs43, [%rd56];
	.loc 11 124 19
	setp.ne.s16 	%p14, %rs43, 0;
	cvt.u32.u64 	%r23, %rd4;
	.loc 11 124 34
	setp.lt.s32 	%p15, %r23, 30;
	.loc 11 124 27
	and.pred  	%p16, %p15, %p14;
	mov.u64 	%rd83, %rd4;
	.loc 11 124 2
	@%p16 bra 	LBB5_15;
// BB#16:                               // %return.sink.split.i.loopexit
	.loc 11 129 11
	add.s64 	%rd88, %rd54, %rd4;
	bra.uni 	LBB5_17;
LBB5_13:
	mov.u64 	%rd88, funcDic;
LBB5_17:                                // %return.sink.split.i
	.loc 11 129 11
	mov.u16 	%rs31, 0;
	st.global.u8 	[%rd88], %rs31;
	add.s32 	%r39, %r39, 1;
	st.global.u32 	[dicHeight], %r39;
LBB5_18:                                // %_Z9getFuncIDPc.exit
	.loc 11 150 16
	setp.eq.s32 	%p17, %r39, 0;
	.loc 11 150 6
	@%p17 bra 	LBB5_30;
// BB#19:                               // %for.cond.preheader.i29
	//DEBUG_VALUE: i <- 0
	.loc 11 160 2
	setp.lt.s32 	%p18, %r39, 1;
	@%p18 bra 	LBB5_25;
// BB#20:                               // %for.body.i44.preheader
	mov.u64 	%rd59, funcDic;
	add.s64 	%rd20, %rd59, 1;
	mov.u32 	%r11, 0;
	mov.u64 	%rd60, 0;
LBB5_21:                                // %for.body.i44
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB5_22 Depth 2
	//DEBUG_VALUE: mystrcmp:cnt <- 0
	//DEBUG_VALUE: mystrcmp:cnt <- 0
	mov.u64 	%rd21, %rd20;
	mov.u64 	%rd22, %rd60;
LBB5_22:                                // %while.body.i37.i51
                                        //   Parent Loop BB5_21 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	.loc 11 138 8
	ld.global.u8 	%rs16, [%rd21+-1];
	//DEBUG_VALUE: mystrcmp:src <- %vreg79
	.loc 11 138 28
	add.s64 	%rd23, %rd42, %rd22;
	ld.u8 	%rs17, [%rd23];
	.loc 11 138 25
	or.b16  	%rs32, %rs17, %rs16;
	and.b16  	%rs33, %rs32, 255;
	setp.eq.s16 	%p19, %rs33, 0;
	@%p19 bra 	LBB5_36;
// BB#23:                               // %if.end.i.i54
                                        //   in Loop: Header=BB5_22 Depth=2
	.loc 11 141 30
	and.b16  	%rs34, %rs17, 255;
	and.b16  	%rs35, %rs16, 255;
	setp.eq.s16 	%p20, %rs35, %rs34;
	@%p20 bra 	LBB5_48;
	bra.uni 	LBB5_24;
LBB5_48:                                // %while.cond.i.i46
                                        //   in Loop: Header=BB5_22 Depth=2
	.loc 11 138 8
	ld.global.u8 	%rs14, [%rd21];
	.loc 11 138 28
	ld.u8 	%rs15, [%rd23+1];
	.loc 11 138 25
	or.b16  	%rs36, %rs15, %rs14;
	and.b16  	%rs37, %rs36, 255;
	setp.eq.s16 	%p21, %rs37, 0;
	@%p21 bra 	LBB5_36;
// BB#49:                               // %if.end.i.i54.1
                                        //   in Loop: Header=BB5_22 Depth=2
	.loc 11 141 30
	and.b16  	%rs38, %rs15, 255;
	and.b16  	%rs39, %rs14, 255;
	.loc 11 141 21
	setp.ne.s16 	%p22, %rs39, %rs38;
	@%p22 bra 	LBB5_24;
// BB#50:                               // %while.cond.i.i46.1
                                        //   in Loop: Header=BB5_22 Depth=2
	.loc 11 136 21
	add.s64 	%rd22, %rd22, 2;
	cvt.u32.u64 	%r27, %rd22;
	.loc 11 136 21
	add.s64 	%rd21, %rd21, 2;
	setp.lt.s32 	%p28, %r27, 30;
	@%p28 bra 	LBB5_22;
	bra.uni 	LBB5_36;
LBB5_24:                                // %for.inc.i57
                                        //   in Loop: Header=BB5_21 Depth=1
	.loc 11 160 31
	add.s32 	%r11, %r11, 1;
	//DEBUG_VALUE: i <- %vreg61
	//DEBUG_VALUE: i <- %vreg61
	.loc 11 160 2
	add.s64 	%rd20, %rd20, 31;
	.loc 11 160 17
	setp.lt.s32 	%p23, %r11, %r39;
	@%p23 bra 	LBB5_21;
LBB5_25:                                // %for.end.i62
	.loc 11 170 11
	mul.wide.s32 	%rd61, %r39, 31;
	mov.u64 	%rd62, funcDic;
	//DEBUG_VALUE: mystrcpy:cnt <- 0
	//DEBUG_VALUE: mystrcpy:cnt <- 0
	//DEBUG_VALUE: mystrcpy:src <- %vreg79
	add.s64 	%rd94, %rd62, %rd61;
	.loc 11 124 10
	ld.u8 	%rs46, [%rd42];
	.loc 11 124 19
	setp.eq.s16 	%p24, %rs46, 0;
	@%p24 bra 	LBB5_29;
// BB#26:                               // %while.body.i31.i72.preheader
	.loc 11 126 12
	add.s64 	%rd26, %rd42, 1;
	mov.u64 	%rd93, 0;
LBB5_27:                                // %while.body.i31.i72
                                        // =>This Inner Loop Header: Depth=1
	.loc 11 126 12
	add.s64 	%rd64, %rd94, %rd93;
	st.global.u8 	[%rd64], %rs46;
	.loc 11 124 10
	add.s64 	%rd28, %rd93, 1;
	add.s64 	%rd65, %rd26, %rd93;
	ld.u8 	%rs46, [%rd65];
	.loc 11 124 19
	setp.ne.s16 	%p25, %rs46, 0;
	cvt.u32.u64 	%r26, %rd28;
	.loc 11 124 34
	setp.lt.s32 	%p26, %r26, 30;
	.loc 11 124 27
	and.pred  	%p27, %p26, %p25;
	mov.u64 	%rd93, %rd28;
	@%p27 bra 	LBB5_27;
// BB#28:                               // %return.sink.split.i76.loopexit99
	.loc 11 129 11
	add.s64 	%rd94, %rd94, %rd28;
LBB5_29:                                // %return.sink.split.i76
	mov.u32 	%r11, %r39;
	bra.uni 	LBB5_35;
LBB5_30:                                // %if.then.i31
	//DEBUG_VALUE: mystrcpy:cnt <- 0
	//DEBUG_VALUE: mystrcpy:cnt <- 0
	//DEBUG_VALUE: mystrcpy:src <- %vreg79
	.loc 11 124 10
	ld.u8 	%rs45, [%rd42];
	.loc 11 124 19
	setp.eq.s16 	%p29, %rs45, 0;
	mov.u32 	%r11, 0;
	@%p29 bra 	LBB5_31;
// BB#32:                               // %while.body.i.i41.preheader
	.loc 11 126 12
	add.s64 	%rd17, %rd42, 1;
	mov.u64 	%rd89, 0;
LBB5_33:                                // %while.body.i.i41
                                        // =>This Inner Loop Header: Depth=1
	.loc 11 126 12
	mov.u64 	%rd68, funcDic;
	add.s64 	%rd69, %rd68, %rd89;
	st.global.u8 	[%rd69], %rs45;
	.loc 11 124 10
	add.s64 	%rd19, %rd89, 1;
	add.s64 	%rd70, %rd17, %rd89;
	ld.u8 	%rs45, [%rd70];
	.loc 11 124 19
	setp.ne.s16 	%p30, %rs45, 0;
	cvt.u32.u64 	%r29, %rd19;
	.loc 11 124 34
	setp.lt.s32 	%p31, %r29, 30;
	.loc 11 124 27
	and.pred  	%p32, %p31, %p30;
	mov.u64 	%rd89, %rd19;
	.loc 11 124 2
	@%p32 bra 	LBB5_33;
// BB#34:                               // %return.sink.split.i76.loopexit
	.loc 11 129 11
	add.s64 	%rd94, %rd68, %rd19;
	bra.uni 	LBB5_35;
LBB5_31:
	mov.u64 	%rd94, funcDic;
LBB5_35:                                // %return.sink.split.i76
	.loc 11 129 11
	mov.u16 	%rs40, 0;
	st.global.u8 	[%rd94], %rs40;
	add.s32 	%r31, %r39, 1;
	st.global.u32 	[dicHeight], %r31;
LBB5_36:                                // %_Z9getFuncIDPc.exit78
	.loc 11 423 36
	cvt.u16.u32 	%rs21, %r17;
	//DEBUG_VALUE: updateCallStack:sline <- %vreg62
	.loc 11 423 51
	cvt.u16.u32 	%rs22, %r18;
	//DEBUG_VALUE: updateCallStack:tid <- undef
	//DEBUG_VALUE: updateCallStack:bytesPerThread <- 120
	//DEBUG_VALUE: updateCallStack:p_stackzone <- %vreg82
	//DEBUG_VALUE: updateCallStack:scolm <- %vreg63
	.loc 11 194 13
	ld.u32 	%r12, [%rd43+136];
	.loc 11 194 13
	setp.ne.s32 	%p33, %r12, 0;
	@%p33 bra 	LBB5_38;
	bra.uni 	LBB5_37;
LBB5_38:                                // %if.end.i
	.loc 11 194 13
	cvt.s64.s32 	%rd32, %r12;
	.loc 11 209 44
	shl.b64 	%rd72, %rd32, 3;
	add.s64 	%rd33, %rd43, %rd72;
	ld.u32 	%r13, [%rd33+-16];
	//DEBUG_VALUE: updateCallStack:p_caller <- %vreg67
	.loc 11 210 44
	ld.u32 	%r14, [%rd33+-8];
	//DEBUG_VALUE: updateCallStack:p_callee <- %vreg68
	.loc 11 212 23
	setp.eq.s32 	%p34, %r13, %r7;
	.loc 11 212 45
	setp.eq.s32 	%p35, %r14, %r11;
	.loc 11 212 33
	and.pred  	%p36, %p34, %p35;
	//DEBUG_VALUE: callFunc:id1 <- %vreg32
	//DEBUG_VALUE: callFunc:id2 <- %vreg61
	@!%p36 bra 	LBB5_40;
	bra.uni 	LBB5_39;
LBB5_39:                                // %if.then22.i
	.loc 11 218 17
	st.v2.u16 	[%rd33+-12], {%rs21, %rs22};
	.loc 11 428 1
	ret;
LBB5_37:                                // %if.then.i24
	.loc 11 198 19
	st.u32 	[%rd43], %r7;
	.loc 11 202 3
	st.v2.u16 	[%rd43+4], {%rs21, %rs22};
	.loc 11 202 19
	st.u32 	[%rd43+8], %r11;
	.loc 11 205 9
	mov.u16 	%rs42, -1;
	st.v2.u16 	[%rd43+12], {%rs42, %rs42};
	mov.u32 	%r36, 2;
	st.u32 	[%rd43+136], %r36;
	.loc 11 428 1
	ret;
LBB5_40:                                // %if.else.i
	.loc 11 220 38
	setp.ne.s32 	%p38, %r13, %r7;
	or.pred  	%p39, %p35, %p38;
	@%p39 bra 	LBB5_42;
	bra.uni 	LBB5_41;
LBB5_42:                                // %if.else47.i
	.loc 11 229 28
	setp.eq.s32 	%p40, %r14, %r7;
	.loc 11 229 19
	@%p40 bra 	LBB5_54;
	bra.uni 	LBB5_43;
LBB5_54:                                // %if.then49.i
	.loc 11 236 17
	st.v2.u16 	[%rd33+-4], {%rs21, %rs22};
	.loc 11 236 38
	st.u32 	[%rd33], %r11;
	.loc 11 237 27
	ld.u32 	%r34, [%rd43+136];
	.loc 11 237 35
	mul.wide.s32 	%rd79, %r34, 8;
	add.s64 	%rd80, %rd43, %rd79;
	.loc 11 239 9
	mov.u16 	%rs41, -1;
	st.v2.u16 	[%rd80+4], {%rs41, %rs41};
	add.s32 	%r35, %r34, 1;
	st.u32 	[%rd43+136], %r35;
	.loc 11 428 1
	ret;
LBB5_41:                                // %if.then34.i
	.loc 11 224 40
	st.u32 	[%rd33+-8], %r11;
	.loc 11 225 27
	ld.u32 	%r32, [%rd43+136];
	.loc 11 225 37
	mul.wide.s32 	%rd73, %r32, 8;
	add.s64 	%rd74, %rd43, %rd73;
	.loc 11 227 17
	st.v2.u16 	[%rd74+-12], {%rs21, %rs22};
	.loc 11 428 1
	ret;
LBB5_43:                                // %for.cond.i.preheader
	add.s64 	%rd95, %rd33, 4;
LBB5_44:                                // %for.cond.i
                                        // =>This Inner Loop Header: Depth=1
	mov.u32 	%r15, %r12;
	.loc 11 247 9
	setp.lt.s32 	%p41, %r15, 1;
	@%p41 bra 	LBB5_47;
// BB#45:                               // %for.body.i26
                                        //   in Loop: Header=BB5_44 Depth=1
	add.s32 	%r12, %r15, -1;
	//DEBUG_VALUE: i <- %vreg64
	.loc 11 249 35
	ld.u32 	%r33, [%rd95+-12];
	.loc 11 249 22
	add.s64 	%rd95, %rd95, -8;
	setp.ne.s32 	%p42, %r33, %r7;
	@%p42 bra 	LBB5_44;
// BB#46:                               // %if.then76.i
	.loc 11 251 11
	st.u32 	[%rd43+136], %r15;
	.loc 11 252 41
	st.u32 	[%rd95+-4], %r11;
	st.v2.u16 	[%rd95], {%rs21, %rs22};
LBB5_47:                                // %_Z15updateCallStackiissiiPv.exit
	.loc 11 428 1
	ret;
}

	// .globl	_Z8cxtprinti
.visible .func _Z8cxtprinti(
	.param .b32 _Z8cxtprinti_param_0
)                                       // @_Z8cxtprinti
{
	.local .align 8 .b8 	__local_depot6[32];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<4>;
	.reg .b16 	%rs<3>;
	.reg .b32 	%r<12>;
	.reg .b64 	%rd<18>;

// BB#0:                                // %entry
	mov.u64 	%SPL, __local_depot6;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u32 	%r4, [_Z8cxtprinti_param_0];
	//DEBUG_VALUE: cxtprint:id <- %vreg10
	.loc 11 452 8
	setp.lt.s32 	%p1, %r4, 0;
	.loc 11 452 6
	@%p1 bra 	LBB6_4;
// BB#1:                                // %if.end
	mov.u64 	%rd8, _$_str_$_6;
	cvta.global.u64 	%rd1, %rd8;
	mov.u64 	%rd9, _$_str_$_7;
	cvta.global.u64 	%rd2, %rd9;
	add.u64 	%rd10, %SP, 0;
	add.u64 	%rd3, %SPL, 0;
	add.u64 	%rd11, %SP, 8;
	add.u64 	%rd4, %SPL, 8;
	.loc 11 455 58
	ld.global.u32 	%r6, [cHeight];
	.loc 11 455 2
	st.local.v2.u32 	[%rd3], {%r4, %r6};
	{ // callseq 6
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd1;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd10;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r7, [retval0+0];
	} // callseq 6
	//DEBUG_VALUE: i <- 0
	//DEBUG_VALUE: i <- 0
	.loc 11 457 43
	mul.wide.s32 	%rd13, %r4, 120;
	mov.u64 	%rd14, contextDic;
	add.s64 	%rd15, %rd14, %rd13;
	add.s64 	%rd17, %rd15, 4;
	mov.u32 	%r11, 0;
LBB6_2:                                 // %land.rhs
                                        // =>This Inner Loop Header: Depth=1
	.loc 11 457 64
	ld.global.u32 	%r2, [%rd17+-4];
	.loc 11 457 67
	setp.eq.s32 	%p2, %r2, -1;
	.loc 11 457 2
	@%p2 bra 	LBB6_4;
// BB#3:                                // %for.body
                                        //   in Loop: Header=BB6_2 Depth=1
	.loc 11 459 108
	ld.global.v2.u16 	{%rs1, %rs2}, [%rd17];
	.loc 11 459 90
	cvt.s32.s16 	%r8, %rs1;
	.loc 11 459 115
	cvt.s32.s16 	%r9, %rs2;
	.loc 11 459 3
	st.local.u32 	[%rd4], %r4;
	st.local.u32 	[%rd4+4], %r11;
	st.local.u32 	[%rd4+8], %r2;
	st.local.u32 	[%rd4+12], %r8;
	st.local.u32 	[%rd4+16], %r9;
	{ // callseq 7
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd2;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd11;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r10, [retval0+0];
	} // callseq 7
	.loc 11 457 77
	add.s32 	%r11, %r11, 1;
	//DEBUG_VALUE: i <- %vreg32
	//DEBUG_VALUE: i <- %vreg32
	.loc 11 457 19
	add.s64 	%rd17, %rd17, 8;
	setp.lt.s32 	%p3, %r11, 15;
	@%p3 bra 	LBB6_2;
LBB6_4:                                 // %return
	.loc 11 463 1
	ret;
}

	// .globl	_Z6cxtcpyP10CallSite_tS0_i
.visible .func _Z6cxtcpyP10CallSite_tS0_i(
	.param .b64 _Z6cxtcpyP10CallSite_tS0_i_param_0,
	.param .b64 _Z6cxtcpyP10CallSite_tS0_i_param_1,
	.param .b32 _Z6cxtcpyP10CallSite_tS0_i_param_2
)                                       // @_Z6cxtcpyP10CallSite_tS0_i
{
	.reg .pred 	%p<6>;
	.reg .b32 	%r<19>;
	.reg .b64 	%rd<51>;

// BB#0:                                // %entry
	ld.param.u32 	%r8, [_Z6cxtcpyP10CallSite_tS0_i_param_2];
	//DEBUG_VALUE: cxtcpy:height <- %vreg28
	//DEBUG_VALUE: cxtcpy:i <- 0
	//DEBUG_VALUE: cxtcpy:i <- 0
	ld.param.u64 	%rd20, [_Z6cxtcpyP10CallSite_tS0_i_param_0];
	//DEBUG_VALUE: cxtcpy:dst <- %vreg26
	.loc 11 469 2
	setp.lt.s32 	%p1, %r8, 1;
	@%p1 bra 	LBB7_1;
// BB#2:                                // %for.body.preheader
	ld.param.u64 	%rd21, [_Z6cxtcpyP10CallSite_tS0_i_param_1];
	//DEBUG_VALUE: cxtcpy:src <- %vreg27
	.loc 11 470 12
	add.s32 	%r10, %r8, -1;
	cvt.u64.u32 	%rd1, %r10;
	and.b32  	%r11, %r8, 3;
	setp.eq.s32 	%p2, %r11, 0;
	@%p2 bra 	LBB7_3;
// BB#4:                                // %for.body.prol.preheader
	.loc 11 470 12
	cvt.u64.u32 	%rd2, %r11;
	mov.u64 	%rd46, 0;
	cvt.u32.u64 	%r13, %rd2;
	mov.u64 	%rd44, %rd21;
	mov.u64 	%rd45, %rd20;
LBB7_5:                                 // %for.body.prol
                                        // =>This Inner Loop Header: Depth=1
	.pragma "nounroll";
	.loc 11 470 10
	ld.u32 	%rd25, [%rd44];
	ld.u32 	%rd26, [%rd44+4];
	st.u32 	[%rd45+4], %rd26;
	st.u32 	[%rd45], %rd25;
	.loc 11 469 2
	add.s64 	%rd45, %rd45, 8;
	add.s64 	%rd44, %rd44, 8;
	add.s64 	%rd46, %rd46, 1;
	cvt.u32.u64 	%r18, %rd46;
	.loc 11 469 2
	setp.ne.s32 	%p3, %r13, %r18;
	@%p3 bra 	LBB7_5;
	bra.uni 	LBB7_6;
LBB7_1:
	mov.u64 	%rd50, 0;
	bra.uni 	LBB7_10;
LBB7_3:
	mov.u32 	%r18, 0;
	mov.u64 	%rd46, 0;
LBB7_6:                                 // %for.body.prol.loopexit
	cvt.u32.u64 	%r14, %rd1;
	.loc 11 470 12
	setp.lt.u32 	%p4, %r14, 3;
	@%p4 bra 	LBB7_9;
// BB#7:                                // %for.body.preheader.new
	sub.s32 	%r17, %r8, %r18;
	mul.wide.s32 	%rd27, %r18, 8;
	add.s64 	%rd28, %rd20, %rd27;
	add.s64 	%rd48, %rd28, 16;
	add.s64 	%rd29, %rd21, %rd27;
	add.s64 	%rd47, %rd29, 24;
LBB7_8:                                 // %for.body
                                        // =>This Inner Loop Header: Depth=1
	shl.b64 	%rd30, %rd46, 3;
	add.s64 	%rd31, %rd21, %rd30;
	.loc 11 470 3
	add.s64 	%rd32, %rd20, %rd30;
	.loc 11 470 10
	ld.u32 	%rd33, [%rd31];
	ld.u32 	%rd34, [%rd31+4];
	st.u32 	[%rd32+4], %rd34;
	st.u32 	[%rd32], %rd33;
	ld.u32 	%rd35, [%rd47+-16];
	ld.u32 	%rd36, [%rd47+-12];
	st.u32 	[%rd48+-4], %rd36;
	st.u32 	[%rd48+-8], %rd35;
	ld.u32 	%rd37, [%rd47+-8];
	ld.u32 	%rd38, [%rd47+-4];
	st.u32 	[%rd48+4], %rd38;
	st.u32 	[%rd48], %rd37;
	ld.u32 	%rd39, [%rd47];
	ld.u32 	%rd40, [%rd47+4];
	st.u32 	[%rd48+12], %rd40;
	st.u32 	[%rd48+8], %rd39;
	.loc 11 469 24
	add.s32 	%r18, %r18, 4;
	.loc 11 470 12
	cvt.s64.s32 	%rd46, %r18;
	.loc 11 469 13
	add.s32 	%r17, %r17, -4;
	add.s64 	%rd48, %rd48, 32;
	add.s64 	%rd47, %rd47, 32;
	.loc 11 469 2
	setp.ne.s32 	%p5, %r17, 0;
	@%p5 bra 	LBB7_8;
LBB7_9:                                 // %for.end.loopexit
	.loc 11 470 12
	add.s64 	%rd50, %rd1, 1;
LBB7_10:                                // %for.end
	.loc 11 474 9
	shl.b64 	%rd41, %rd50, 3;
	add.s64 	%rd42, %rd20, %rd41;
	.loc 11 474 12
	mov.u32 	%r15, -1;
	st.u32 	[%rd42], %r15;
	.loc 11 477 1
	ret;
}

	// .globl	_Z6cxtcmpP10CallSite_tS0_i
.visible .func  (.param .b32 func_retval0) _Z6cxtcmpP10CallSite_tS0_i(
	.param .b64 _Z6cxtcmpP10CallSite_tS0_i_param_0,
	.param .b64 _Z6cxtcmpP10CallSite_tS0_i_param_1,
	.param .b32 _Z6cxtcmpP10CallSite_tS0_i_param_2
)                                       // @_Z6cxtcmpP10CallSite_tS0_i
{
	.reg .pred 	%p<9>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<9>;

// BB#0:                                // %entry
	ld.param.u32 	%r3, [_Z6cxtcmpP10CallSite_tS0_i_param_2];
	//DEBUG_VALUE: cxtcmp:height <- %vreg9
	//DEBUG_VALUE: i <- 0
	//DEBUG_VALUE: i <- 0
	mov.pred 	%p8, -1;
	.loc 11 482 2
	setp.lt.s32 	%p3, %r3, 1;
	@%p3 bra 	LBB8_5;
// BB#1:                                // %for.body.preheader
	ld.param.u64 	%rd8, [_Z6cxtcmpP10CallSite_tS0_i_param_1];
	//DEBUG_VALUE: cxtcmp:src <- %vreg21
	ld.param.u64 	%rd7, [_Z6cxtcmpP10CallSite_tS0_i_param_0];
	//DEBUG_VALUE: cxtcmp:dst <- %vreg20
	mov.u32 	%r8, 0;
	mov.pred 	%p4, 0;
LBB8_3:                                 // %for.body
                                        // =>This Inner Loop Header: Depth=1
	.loc 11 483 15
	ld.u32 	%r5, [%rd7];
	.loc 11 483 28
	ld.u32 	%r6, [%rd8];
	.loc 11 483 18
	setp.eq.s32 	%p5, %r5, %r6;
	@%p5 bra 	LBB8_2;
	bra.uni 	LBB8_4;
LBB8_2:                                 // %for.cond
                                        //   in Loop: Header=BB8_3 Depth=1
	.loc 11 482 28
	add.s32 	%r8, %r8, 1;
	//DEBUG_VALUE: i <- %vreg22
	//DEBUG_VALUE: i <- %vreg22
	.loc 11 482 17
	add.s64 	%rd8, %rd8, 8;
	add.s64 	%rd7, %rd7, 8;
	.loc 11 482 2
	setp.ge.s32 	%p7, %r8, %r3;
	@%p7 bra 	LBB8_5;
	bra.uni 	LBB8_3;
LBB8_4:
	mov.pred 	%p8, %p4;
LBB8_5:                                 // %cleanup
	.loc 11 489 1
	selp.u32 	%r7, 1, 0, %p8;
	st.param.b32 	[func_retval0+0], %r7;
	ret;
}

	// .globl	getContextID
.visible .func  (.param .b32 func_retval0) getContextID(
	.param .b64 getContextID_param_0
)                                       // @getContextID
{
	.reg .pred 	%p<18>;
	.reg .b32 	%r<54>;
	.reg .b64 	%rd<132>;

// BB#0:                                // %entry
	ld.param.u64 	%rd46, [getContextID_param_0];
	//DEBUG_VALUE: getContextID:p_stackzone <- %vreg69
	//DEBUG_VALUE: getContextID:bytesPerThread <- 120
	.loc 11 510 7
	ld.u32 	%r1, [%rd46+136];
	//DEBUG_VALUE: cxtcmp:height <- %vreg0
	//DEBUG_VALUE: cxtcpy:height <- %vreg0
	.loc 11 510 14
	setp.eq.s32 	%p1, %r1, 0;
	@%p1 bra 	LBB9_1;
// BB#2:                                // %if.end
	.loc 11 513 6
	ld.global.u32 	%r2, [cHeight];
	.loc 11 513 13
	setp.eq.s32 	%p2, %r2, 0;
	.loc 11 513 6
	@%p2 bra 	LBB9_5;
// BB#3:                                // %for.cond.preheader
	//DEBUG_VALUE: getContextID:i <- 0
	mov.u64 	%rd47, 0;
	.loc 11 529 2
	setp.lt.s32 	%p3, %r2, 1;
	@%p3 bra 	LBB9_4;
// BB#16:                               // %for.body.preheader
	mov.u32 	%r53, 0;
	mov.u64 	%rd19, contextDic;
	setp.lt.s32 	%p4, %r1, 1;
LBB9_17:                                // %for.body
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB9_22 Depth 2
	mov.u32 	%r11, %r53;
	//DEBUG_VALUE: i <- 0
	//DEBUG_VALUE: i <- 0
	@%p4 bra 	LBB9_18;
// BB#21:                               // %for.body.i46.preheader
                                        //   in Loop: Header=BB9_17 Depth=1
	mov.u32 	%r48, 0;
	mov.u64 	%rd121, 0;
LBB9_22:                                // %for.body.i46
                                        //   Parent Loop BB9_17 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	.loc 11 483 15
	add.s64 	%rd51, %rd19, %rd121;
	ld.global.u32 	%r29, [%rd51];
	.loc 11 483 28
	add.s64 	%rd52, %rd46, %rd121;
	ld.u32 	%r30, [%rd52];
	.loc 11 483 18
	setp.eq.s32 	%p5, %r29, %r30;
	.loc 11 483 8
	@%p5 bra 	LBB9_19;
	bra.uni 	LBB9_23;
LBB9_19:                                // %for.cond.i
                                        //   in Loop: Header=BB9_22 Depth=2
	.loc 11 482 28
	add.s32 	%r48, %r48, 1;
	//DEBUG_VALUE: i <- %vreg185
	//DEBUG_VALUE: i <- %vreg185
	.loc 11 482 17
	add.s64 	%rd121, %rd121, 8;
	.loc 11 482 2
	setp.ge.s32 	%p12, %r48, %r1;
	@%p12 bra 	LBB9_20;
	bra.uni 	LBB9_22;
LBB9_23:                                // %for.inc
                                        //   in Loop: Header=BB9_17 Depth=1
	.loc 11 529 26
	add.s32 	%r53, %r11, 1;
	//DEBUG_VALUE: getContextID:i <- %vreg200
	//DEBUG_VALUE: getContextID:i <- %vreg200
	.loc 11 529 2
	add.s64 	%rd19, %rd19, 120;
	.loc 11 529 15
	setp.lt.s32 	%p6, %r53, %r2;
	@%p6 bra 	LBB9_17;
// BB#24:
	cvt.s64.s32 	%rd122, %r53;
	mul.wide.s32 	%rd53, %r11, 120;
	mov.u64 	%rd54, contextDic;
	add.s64 	%rd55, %rd54, %rd53;
	add.s64 	%rd123, %rd55, 120;
	//DEBUG_VALUE: cxtcpy:dst <- undef
	//DEBUG_VALUE: cxtcpy:height <- undef
	//DEBUG_VALUE: cxtcpy:i <- 0
	//DEBUG_VALUE: cxtcpy:i <- 0
	.loc 11 469 2
	setp.lt.s32 	%p7, %r1, 1;
	@%p7 bra 	LBB9_34;
	bra.uni 	LBB9_26;
LBB9_1:
	mov.u32 	%r53, -1;
	st.param.b32 	[func_retval0+0], %r53;
	.loc 11 552 1
	ret;
LBB9_5:                                 // %if.then10
	//DEBUG_VALUE: cxtcpy:i <- 0
	//DEBUG_VALUE: cxtcpy:i <- 0
	.loc 11 469 2
	setp.lt.s32 	%p13, %r1, 1;
	@%p13 bra 	LBB9_6;
// BB#7:                                // %for.body.preheader.i48
	.loc 11 470 12
	add.s32 	%r3, %r1, -1;
	and.b32  	%r38, %r1, 3;
	setp.eq.s32 	%p14, %r38, 0;
	@%p14 bra 	LBB9_8;
// BB#9:                                // %for.body.i56.prol.preheader
	.loc 11 470 12
	cvt.u64.u32 	%rd1, %r38;
	mov.u64 	%rd114, contextDic;
	mov.u64 	%rd115, 0;
	cvt.u32.u64 	%r40, %rd1;
	mov.u64 	%rd113, %rd46;
LBB9_10:                                // %for.body.i56.prol
                                        // =>This Inner Loop Header: Depth=1
	.pragma "nounroll";
	.loc 11 470 10
	ld.u32 	%rd90, [%rd113];
	ld.u32 	%rd91, [%rd113+4];
	st.global.u32 	[%rd114+4], %rd91;
	st.global.u32 	[%rd114], %rd90;
	.loc 11 469 2
	add.s64 	%rd114, %rd114, 8;
	add.s64 	%rd113, %rd113, 8;
	add.s64 	%rd115, %rd115, 1;
	cvt.u32.u64 	%r46, %rd115;
	.loc 11 469 2
	setp.ne.s32 	%p15, %r40, %r46;
	@%p15 bra 	LBB9_10;
// BB#11:                               // %for.body.i56.prol.loopexit
	.loc 11 470 12
	setp.lt.u32 	%p16, %r3, 3;
	@%p16 bra 	LBB9_14;
	bra.uni 	LBB9_12;
LBB9_20:
	mov.u32 	%r53, %r11;
	st.param.b32 	[func_retval0+0], %r53;
	.loc 11 552 1
	ret;
LBB9_4:
	mov.u64 	%rd123, contextDic;
	mov.u32 	%r53, 0;
	mov.u64 	%rd122, %rd47;
	//DEBUG_VALUE: cxtcpy:dst <- undef
	//DEBUG_VALUE: cxtcpy:height <- undef
	//DEBUG_VALUE: cxtcpy:i <- 0
	//DEBUG_VALUE: cxtcpy:i <- 0
	.loc 11 469 2
	setp.lt.s32 	%p7, %r1, 1;
	@%p7 bra 	LBB9_34;
LBB9_26:                                // %for.body.preheader.i
	.loc 11 470 12
	add.s32 	%r16, %r1, -1;
	and.b32  	%r32, %r1, 3;
	setp.eq.s32 	%p8, %r32, 0;
	@%p8 bra 	LBB9_27;
// BB#28:                               // %for.body.i.prol.preheader
	.loc 11 470 12
	mul.lo.s64 	%rd59, %rd122, 120;
	mov.u64 	%rd60, contextDic;
	add.s64 	%rd126, %rd60, %rd59;
	cvt.u64.u32 	%rd28, %r32;
	mov.u64 	%rd127, 0;
	cvt.u32.u64 	%r34, %rd28;
	mov.u64 	%rd125, %rd46;
LBB9_29:                                // %for.body.i.prol
                                        // =>This Inner Loop Header: Depth=1
	.pragma "nounroll";
	.loc 11 470 10
	ld.u32 	%rd61, [%rd125];
	ld.u32 	%rd62, [%rd125+4];
	st.global.u32 	[%rd126+4], %rd62;
	st.global.u32 	[%rd126], %rd61;
	.loc 11 469 2
	add.s64 	%rd126, %rd126, 8;
	add.s64 	%rd125, %rd125, 8;
	add.s64 	%rd127, %rd127, 1;
	cvt.u32.u64 	%r52, %rd127;
	.loc 11 469 2
	setp.ne.s32 	%p9, %r34, %r52;
	@%p9 bra 	LBB9_29;
// BB#30:                               // %for.body.i.prol.loopexit
	.loc 11 470 12
	setp.lt.u32 	%p10, %r16, 3;
	@%p10 bra 	LBB9_33;
	bra.uni 	LBB9_31;
LBB9_6:
	mov.u64 	%rd119, 0;
	bra.uni 	LBB9_15;
LBB9_8:
	mov.u32 	%r46, 0;
	mov.u64 	%rd115, 0;
	.loc 11 470 12
	setp.lt.u32 	%p16, %r3, 3;
	@%p16 bra 	LBB9_14;
LBB9_12:                                // %for.body.preheader.i48.new
	sub.s32 	%r45, %r1, %r46;
	mov.u64 	%rd92, contextDic;
	mul.wide.s32 	%rd93, %r46, 8;
	add.s64 	%rd94, %rd92, %rd93;
	add.s64 	%rd117, %rd94, 16;
	add.s64 	%rd95, %rd46, %rd93;
	add.s64 	%rd116, %rd95, 24;
LBB9_13:                                // %for.body.i56
                                        // =>This Inner Loop Header: Depth=1
	shl.b64 	%rd96, %rd115, 3;
	add.s64 	%rd97, %rd46, %rd96;
	.loc 11 470 3
	add.s64 	%rd99, %rd92, %rd96;
	.loc 11 470 10
	ld.u32 	%rd100, [%rd97];
	ld.u32 	%rd101, [%rd97+4];
	st.global.u32 	[%rd99+4], %rd101;
	st.global.u32 	[%rd99], %rd100;
	ld.u32 	%rd102, [%rd116+-16];
	ld.u32 	%rd103, [%rd116+-12];
	st.global.u32 	[%rd117+-4], %rd103;
	st.global.u32 	[%rd117+-8], %rd102;
	ld.u32 	%rd104, [%rd116+-8];
	ld.u32 	%rd105, [%rd116+-4];
	st.global.u32 	[%rd117+4], %rd105;
	st.global.u32 	[%rd117], %rd104;
	ld.u32 	%rd106, [%rd116];
	ld.u32 	%rd107, [%rd116+4];
	st.global.u32 	[%rd117+12], %rd107;
	st.global.u32 	[%rd117+8], %rd106;
	.loc 11 469 24
	add.s32 	%r46, %r46, 4;
	.loc 11 470 12
	cvt.s64.s32 	%rd115, %r46;
	.loc 11 469 13
	add.s32 	%r45, %r45, -4;
	add.s64 	%rd117, %rd117, 32;
	add.s64 	%rd116, %rd116, 32;
	.loc 11 469 2
	setp.ne.s32 	%p17, %r45, 0;
	@%p17 bra 	LBB9_13;
LBB9_14:                                // %for.end.loopexit.i57
	.loc 11 470 12
	cvt.u64.u32 	%rd108, %r3;
	add.s64 	%rd119, %rd108, 1;
LBB9_15:                                // %_Z6cxtcpyP10CallSite_tS0_i.exit60
	.loc 11 474 9
	shl.b64 	%rd109, %rd119, 3;
	mov.u64 	%rd110, contextDic;
	add.s64 	%rd111, %rd110, %rd109;
	.loc 11 474 12
	mov.u32 	%r42, -1;
	st.global.u32 	[%rd111], %r42;
	.loc 11 518 10
	mov.u32 	%r43, 1;
	st.global.u32 	[cHeight], %r43;
	mov.u32 	%r53, 0;
	st.param.b32 	[func_retval0+0], %r53;
	.loc 11 552 1
	ret;
LBB9_27:
	mov.u32 	%r52, 0;
	mov.u64 	%rd127, 0;
	.loc 11 470 12
	setp.lt.u32 	%p10, %r16, 3;
	@%p10 bra 	LBB9_33;
LBB9_31:                                // %for.body.preheader.i.new
	sub.s32 	%r51, %r1, %r52;
	mul.lo.s64 	%rd63, %rd122, 120;
	mov.u64 	%rd64, contextDic;
	add.s64 	%rd65, %rd64, %rd63;
	mul.wide.s32 	%rd66, %r52, 8;
	add.s64 	%rd67, %rd65, %rd66;
	add.s64 	%rd129, %rd67, 16;
	add.s64 	%rd68, %rd46, %rd66;
	add.s64 	%rd128, %rd68, 24;
LBB9_32:                                // %for.body.i
                                        // =>This Inner Loop Header: Depth=1
	shl.b64 	%rd69, %rd127, 3;
	add.s64 	%rd70, %rd46, %rd69;
	.loc 11 470 3
	add.s64 	%rd74, %rd65, %rd69;
	.loc 11 470 10
	ld.u32 	%rd75, [%rd70];
	ld.u32 	%rd76, [%rd70+4];
	st.global.u32 	[%rd74+4], %rd76;
	st.global.u32 	[%rd74], %rd75;
	ld.u32 	%rd77, [%rd128+-16];
	ld.u32 	%rd78, [%rd128+-12];
	st.global.u32 	[%rd129+-4], %rd78;
	st.global.u32 	[%rd129+-8], %rd77;
	ld.u32 	%rd79, [%rd128+-8];
	ld.u32 	%rd80, [%rd128+-4];
	st.global.u32 	[%rd129+4], %rd80;
	st.global.u32 	[%rd129], %rd79;
	ld.u32 	%rd81, [%rd128];
	ld.u32 	%rd82, [%rd128+4];
	st.global.u32 	[%rd129+12], %rd82;
	st.global.u32 	[%rd129+8], %rd81;
	.loc 11 469 24
	add.s32 	%r52, %r52, 4;
	.loc 11 470 12
	cvt.s64.s32 	%rd127, %r52;
	.loc 11 469 13
	add.s32 	%r51, %r51, -4;
	add.s64 	%rd129, %rd129, 32;
	add.s64 	%rd128, %rd128, 32;
	.loc 11 469 2
	setp.ne.s32 	%p11, %r51, 0;
	@%p11 bra 	LBB9_32;
LBB9_33:                                // %for.end.loopexit.i
	.loc 11 470 12
	cvt.u64.u32 	%rd83, %r16;
	add.s64 	%rd47, %rd83, 1;
LBB9_34:                                // %_Z6cxtcpyP10CallSite_tS0_i.exit
	shl.b64 	%rd84, %rd47, 3;
	add.s64 	%rd85, %rd123, %rd84;
	.loc 11 474 12
	mov.u32 	%r35, -1;
	st.global.u32 	[%rd85], %r35;
	.loc 11 546 13
	add.s32 	%r36, %r53, 1;
	.loc 11 546 10
	st.global.u32 	[cHeight], %r36;
	st.param.b32 	[func_retval0+0], %r53;
	.loc 11 552 1
	ret;
LBB9_18:
	mov.u32 	%r53, %r11;
	st.param.b32 	[func_retval0+0], %r53;
	.loc 11 552 1
	ret;
}

	// .globl	passBasicBlock
.visible .func passBasicBlock(
	.param .b32 passBasicBlock_param_0,
	.param .b32 passBasicBlock_param_1,
	.param .b32 passBasicBlock_param_2,
	.param .b32 passBasicBlock_param_3,
	.param .b64 passBasicBlock_param_4
)                                       // @passBasicBlock
{
	.reg .pred 	%p<40>;
	.reg .b16 	%rs<9>;
	.reg .b32 	%r<129>;
	.reg .b64 	%rd<287>;

// BB#0:                                // %entry
	mov.u32 	%r1, %ctaid.x;
	mov.u32 	%r2, %ctaid.y;
	mov.u32 	%r58, %nctaid.x;
	.loc 11 557 26
	mad.lo.s32 	%r3, %r58, %r2, %r1;
	.loc 11 557 52
	ld.global.u32 	%r59, [CTALB];
	.loc 11 557 50
	setp.lt.u32 	%p1, %r3, %r59;
	.loc 11 557 58
	@%p1 bra 	LBB10_78;
// BB#1:                                // %lor.lhs.false
	.loc 11 557 99
	ld.global.u32 	%r60, [CTAUB];
	.loc 11 557 97
	setp.gt.u32 	%p2, %r3, %r60;
	.loc 11 557 14
	@%p2 bra 	LBB10_78;
// BB#2:                                // %if.end
	//DEBUG_VALUE: __ballot:a <- 1
	.loc 10 315 3
	mov.u32 	%r62, 1;
	// begin inline asm
	{ 
	.reg .pred 	%p1; 
	setp.ne.u32 	%p1, %r62, 0; 
	vote.ballot.b32 	%r61, %p1; 
	}
	// end inline asm
	//DEBUG_VALUE: __ballot:result <- %vreg160
	//DEBUG_VALUE: passBasicBlock:map <- %vreg160
	.loc 11 563 7
	ld.global.u64 	%rd99, [buffer_oN_DeViCe];
	.loc 11 563 24
	setp.eq.s64 	%p3, %rd99, 0;
	.loc 11 563 7
	@%p3 bra 	LBB10_78;
// BB#3:                                // %if.end15
	ld.param.u64 	%rd98, [passBasicBlock_param_4];
	//DEBUG_VALUE: passBasicBlock:p_stackzone <- %vreg154
	ld.param.u32 	%r57, [passBasicBlock_param_3];
	//DEBUG_VALUE: passBasicBlock:scolm <- %vreg153
	ld.param.u32 	%r56, [passBasicBlock_param_2];
	//DEBUG_VALUE: passBasicBlock:sline <- %vreg152
	.loc 11 567 6
	setp.ne.s32 	%p4, %r61, -1;
	@%p4 bra 	LBB10_41;
	bra.uni 	LBB10_4;
LBB10_41:                               // %if.else
	//DEBUG_VALUE: atomicAdd:val <- 1
	//DEBUG_VALUE: __ullAtomicAdd:val <- 1
	.loc 10 1526 10
	mov.u64 	%rd100, bbccnntt;
	atom.global.add.u64 	%rd101, [%rd100], 1;
	//DEBUG_VALUE: key <- 0
	.loc 11 599 53
	ld.global.u64 	%rd49, [buffer_oN_DeViCe];
	//DEBUG_VALUE: bblog <- %vreg78
	.loc 11 600 4
	shl.b64 	%rd102, %rd101, 32;
	cvt.s64.s32 	%rd50, %rd101;
	.loc 11 600 15
	shr.s64 	%rd103, %rd102, 27;
	add.s64 	%rd104, %rd49, %rd103;
	mov.u64 	%rd105, 0;
	.loc 11 600 19
	st.u64 	[%rd104+8], %rd105;
	mov.u32 	%r64, %tid.x;
	.loc 11 602 50
	cvt.u16.u32 	%rs1, %r64;
	mov.u32 	%r65, %tid.y;
	.loc 11 603 50
	cvt.u16.u32 	%rs2, %r65;
	.loc 11 604 50
	cvt.u16.u32 	%rs3, %r1;
	.loc 11 605 50
	cvt.u16.u32 	%rs4, %r2;
	.loc 11 606 36
	st.v4.u16 	[%rd104], {%rs3, %rs4, %rs1, %rs2};
	//DEBUG_VALUE: getContextID:bytesPerThread <- 120
	//DEBUG_VALUE: getContextID:p_stackzone <- %vreg154
	.loc 11 492 35
	st.v2.u32 	[%rd104+16], {%r56, %r57};
	.loc 11 510 7
	ld.u32 	%r31, [%rd98+136];
	//DEBUG_VALUE: cxtcmp:height <- %vreg80
	//DEBUG_VALUE: cxtcpy:height <- %vreg80
	.loc 11 510 14
	setp.eq.s32 	%p5, %r31, 0;
	@%p5 bra 	LBB10_42;
// BB#43:                               // %if.end.i
	.loc 11 513 6
	ld.global.u32 	%r32, [cHeight];
	.loc 11 513 13
	setp.eq.s32 	%p6, %r32, 0;
	.loc 11 513 6
	@%p6 bra 	LBB10_46;
// BB#44:                               // %for.cond.preheader.i
	//DEBUG_VALUE: getContextID:i <- 0
	.loc 11 529 2
	setp.lt.s32 	%p7, %r32, 1;
	@%p7 bra 	LBB10_45;
// BB#57:                               // %for.body.i.preheader
	mov.u32 	%r67, 0;
	mov.u64 	%rd69, contextDic;
	setp.lt.s32 	%p8, %r31, 1;
	mov.u32 	%r117, %r67;
LBB10_58:                               // %for.body.i
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB10_63 Depth 2
	mov.u32 	%r41, %r117;
	//DEBUG_VALUE: i <- 0
	//DEBUG_VALUE: i <- 0
	@%p8 bra 	LBB10_59;
// BB#62:                               // %for.body.i46.i.preheader
                                        //   in Loop: Header=BB10_58 Depth=1
	mov.u32 	%r122, 0;
	mov.u64 	%rd275, 0;
LBB10_63:                               // %for.body.i46.i
                                        //   Parent Loop BB10_58 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	.loc 11 483 15
	add.s64 	%rd110, %rd69, %rd275;
	ld.global.u32 	%r70, [%rd110];
	.loc 11 483 28
	add.s64 	%rd111, %rd98, %rd275;
	ld.u32 	%r71, [%rd111];
	.loc 11 483 18
	setp.eq.s32 	%p9, %r70, %r71;
	.loc 11 483 8
	@%p9 bra 	LBB10_60;
	bra.uni 	LBB10_64;
LBB10_60:                               // %for.cond.i.i
                                        //   in Loop: Header=BB10_63 Depth=2
	.loc 11 482 28
	add.s32 	%r122, %r122, 1;
	//DEBUG_VALUE: i <- %vreg443
	//DEBUG_VALUE: i <- %vreg443
	.loc 11 482 17
	add.s64 	%rd275, %rd275, 8;
	.loc 11 482 2
	setp.ge.s32 	%p16, %r122, %r31;
	@%p16 bra 	LBB10_61;
	bra.uni 	LBB10_63;
LBB10_64:                               // %for.inc.i
                                        //   in Loop: Header=BB10_58 Depth=1
	.loc 11 529 26
	add.s32 	%r117, %r41, 1;
	//DEBUG_VALUE: getContextID:i <- %vreg428
	//DEBUG_VALUE: getContextID:i <- %vreg428
	.loc 11 529 2
	add.s64 	%rd69, %rd69, 120;
	.loc 11 529 15
	setp.lt.s32 	%p10, %r117, %r32;
	@%p10 bra 	LBB10_58;
// BB#65:
	cvt.s64.s32 	%rd276, %r117;
	mul.wide.s32 	%rd112, %r41, 120;
	mov.u64 	%rd113, contextDic;
	add.s64 	%rd114, %rd113, %rd112;
	add.s64 	%rd277, %rd114, 120;
	//DEBUG_VALUE: cxtcpy:dst <- undef
	//DEBUG_VALUE: cxtcpy:height <- undef
	//DEBUG_VALUE: cxtcpy:i <- 0
	//DEBUG_VALUE: cxtcpy:i <- 0
	.loc 11 469 2
	setp.lt.s32 	%p11, %r31, 1;
	@%p11 bra 	LBB10_75;
	bra.uni 	LBB10_67;
LBB10_4:                                // %if.then17
	mov.u32 	%r5, %tid.x;
	mov.u32 	%r6, %tid.y;
	mov.u32 	%r85, %ntid.x;
	.loc 11 570 25
	mad.lo.s32 	%r86, %r85, %r6, %r5;
	//DEBUG_VALUE: tid <- %vreg282
	.loc 11 571 13
	and.b32  	%r87, %r86, 31;
	.loc 11 571 7
	setp.ne.s32 	%p22, %r87, 0;
	@%p22 bra 	LBB10_78;
// BB#5:                                // %if.then25
	//DEBUG_VALUE: atomicAdd:val <- 1
	//DEBUG_VALUE: __ullAtomicAdd:val <- 1
	.loc 10 1526 10
	mov.u64 	%rd173, bbccnntt;
	atom.global.add.u64 	%rd174, [%rd173], 1;
	//DEBUG_VALUE: key <- 0
	.loc 11 578 32
	ld.global.u64 	%rd1, [buffer_oN_DeViCe];
	//DEBUG_VALUE: bblog <- %vreg6
	.loc 11 579 4
	shl.b64 	%rd175, %rd174, 32;
	cvt.s64.s32 	%rd2, %rd174;
	.loc 11 579 15
	shr.s64 	%rd176, %rd175, 27;
	add.s64 	%rd177, %rd1, %rd176;
	mov.u64 	%rd178, 0;
	.loc 11 579 19
	st.u64 	[%rd177+8], %rd178;
	.loc 11 581 29
	cvt.u16.u32 	%rs5, %r5;
	.loc 11 582 29
	cvt.u16.u32 	%rs6, %r6;
	.loc 11 583 29
	cvt.u16.u32 	%rs7, %r1;
	.loc 11 584 29
	cvt.u16.u32 	%rs8, %r2;
	.loc 11 585 15
	st.v4.u16 	[%rd177], {%rs7, %rs8, %rs5, %rs6};
	//DEBUG_VALUE: getContextID:bytesPerThread <- 120
	//DEBUG_VALUE: getContextID:p_stackzone <- %vreg154
	.loc 11 492 35
	st.v2.u32 	[%rd177+16], {%r56, %r57};
	.loc 11 510 7
	ld.u32 	%r7, [%rd98+136];
	//DEBUG_VALUE: cxtcmp:height <- %vreg8
	//DEBUG_VALUE: cxtcpy:height <- %vreg8
	.loc 11 510 14
	setp.eq.s32 	%p23, %r7, 0;
	@%p23 bra 	LBB10_6;
// BB#7:                                // %if.end.i145
	.loc 11 513 6
	ld.global.u32 	%r8, [cHeight];
	.loc 11 513 13
	setp.eq.s32 	%p24, %r8, 0;
	.loc 11 513 6
	@%p24 bra 	LBB10_10;
// BB#8:                                // %for.cond.preheader.i148
	//DEBUG_VALUE: getContextID:i <- 0
	.loc 11 529 2
	setp.lt.s32 	%p25, %r8, 1;
	@%p25 bra 	LBB10_9;
// BB#21:                               // %for.body.i167.preheader
	mov.u32 	%r90, 0;
	mov.u64 	%rd21, contextDic;
	setp.lt.s32 	%p26, %r7, 1;
	mov.u32 	%r117, %r90;
LBB10_22:                               // %for.body.i167
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB10_27 Depth 2
	mov.u32 	%r17, %r117;
	//DEBUG_VALUE: i <- 0
	//DEBUG_VALUE: i <- 0
	@%p26 bra 	LBB10_23;
// BB#26:                               // %for.body.i46.i176.preheader
                                        //   in Loop: Header=BB10_22 Depth=1
	mov.u32 	%r112, 0;
	mov.u64 	%rd255, 0;
LBB10_27:                               // %for.body.i46.i176
                                        //   Parent Loop BB10_22 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	.loc 11 483 15
	add.s64 	%rd183, %rd21, %rd255;
	ld.global.u32 	%r93, [%rd183];
	.loc 11 483 28
	add.s64 	%rd184, %rd98, %rd255;
	ld.u32 	%r94, [%rd184];
	.loc 11 483 18
	setp.eq.s32 	%p27, %r93, %r94;
	.loc 11 483 8
	@%p27 bra 	LBB10_24;
	bra.uni 	LBB10_28;
LBB10_24:                               // %for.cond.i.i169
                                        //   in Loop: Header=BB10_27 Depth=2
	.loc 11 482 28
	add.s32 	%r112, %r112, 1;
	//DEBUG_VALUE: i <- %vreg413
	//DEBUG_VALUE: i <- %vreg413
	.loc 11 482 17
	add.s64 	%rd255, %rd255, 8;
	.loc 11 482 2
	setp.ge.s32 	%p34, %r112, %r7;
	@%p34 bra 	LBB10_25;
	bra.uni 	LBB10_27;
LBB10_28:                               // %for.inc.i182
                                        //   in Loop: Header=BB10_22 Depth=1
	.loc 11 529 26
	add.s32 	%r117, %r17, 1;
	//DEBUG_VALUE: getContextID:i <- %vreg428
	//DEBUG_VALUE: getContextID:i <- %vreg428
	.loc 11 529 2
	add.s64 	%rd21, %rd21, 120;
	.loc 11 529 15
	setp.lt.s32 	%p28, %r117, %r8;
	@%p28 bra 	LBB10_22;
// BB#29:
	cvt.s64.s32 	%rd256, %r117;
	mul.wide.s32 	%rd185, %r17, 120;
	mov.u64 	%rd186, contextDic;
	add.s64 	%rd187, %rd186, %rd185;
	add.s64 	%rd257, %rd187, 120;
	//DEBUG_VALUE: cxtcpy:dst <- undef
	//DEBUG_VALUE: cxtcpy:height <- undef
	//DEBUG_VALUE: cxtcpy:i <- 0
	//DEBUG_VALUE: cxtcpy:i <- 0
	.loc 11 469 2
	setp.lt.s32 	%p29, %r7, 1;
	@%p29 bra 	LBB10_39;
	bra.uni 	LBB10_31;
LBB10_42:
	mov.u32 	%r117, -1;
	bra.uni 	LBB10_76;
LBB10_46:                               // %if.then10.i
	//DEBUG_VALUE: cxtcpy:i <- 0
	//DEBUG_VALUE: cxtcpy:i <- 0
	.loc 11 469 2
	setp.lt.s32 	%p17, %r31, 1;
	@%p17 bra 	LBB10_47;
// BB#48:                               // %for.body.i56.i.preheader
	.loc 11 470 12
	add.s32 	%r33, %r31, -1;
	and.b32  	%r79, %r31, 3;
	setp.eq.s32 	%p18, %r79, 0;
	@%p18 bra 	LBB10_49;
// BB#50:                               // %for.body.i56.i.prol.preheader
	.loc 11 470 12
	cvt.u64.u32 	%rd51, %r79;
	mov.u64 	%rd268, contextDic;
	mov.u64 	%rd269, 0;
	cvt.u32.u64 	%r81, %rd51;
	mov.u64 	%rd267, %rd98;
LBB10_51:                               // %for.body.i56.i.prol
                                        // =>This Inner Loop Header: Depth=1
	.pragma "nounroll";
	.loc 11 470 10
	ld.u32 	%rd149, [%rd267];
	ld.u32 	%rd150, [%rd267+4];
	st.global.u32 	[%rd268+4], %rd150;
	st.global.u32 	[%rd268], %rd149;
	.loc 11 469 2
	add.s64 	%rd268, %rd268, 8;
	add.s64 	%rd267, %rd267, 8;
	add.s64 	%rd269, %rd269, 1;
	cvt.u32.u64 	%r120, %rd269;
	.loc 11 469 2
	setp.ne.s32 	%p19, %r81, %r120;
	@%p19 bra 	LBB10_51;
// BB#52:                               // %for.body.i56.i.prol.loopexit
	.loc 11 470 12
	setp.lt.u32 	%p20, %r33, 3;
	@%p20 bra 	LBB10_55;
	bra.uni 	LBB10_53;
LBB10_61:
	mov.u32 	%r117, %r41;
	bra.uni 	LBB10_76;
LBB10_45:
	mov.u64 	%rd277, contextDic;
	mov.u32 	%r117, 0;
	mov.u64 	%rd276, %rd105;
	//DEBUG_VALUE: cxtcpy:dst <- undef
	//DEBUG_VALUE: cxtcpy:height <- undef
	//DEBUG_VALUE: cxtcpy:i <- 0
	//DEBUG_VALUE: cxtcpy:i <- 0
	.loc 11 469 2
	setp.lt.s32 	%p11, %r31, 1;
	@%p11 bra 	LBB10_75;
LBB10_67:                               // %for.body.i.i.preheader
	.loc 11 470 12
	add.s32 	%r46, %r31, -1;
	and.b32  	%r73, %r31, 3;
	setp.eq.s32 	%p12, %r73, 0;
	@%p12 bra 	LBB10_68;
// BB#69:                               // %for.body.i.i.prol.preheader
	.loc 11 470 12
	mul.lo.s64 	%rd118, %rd276, 120;
	mov.u64 	%rd119, contextDic;
	add.s64 	%rd280, %rd119, %rd118;
	cvt.u64.u32 	%rd78, %r73;
	mov.u64 	%rd281, 0;
	cvt.u32.u64 	%r75, %rd78;
	mov.u64 	%rd279, %rd98;
LBB10_70:                               // %for.body.i.i.prol
                                        // =>This Inner Loop Header: Depth=1
	.pragma "nounroll";
	.loc 11 470 10
	ld.u32 	%rd120, [%rd279];
	ld.u32 	%rd121, [%rd279+4];
	st.global.u32 	[%rd280+4], %rd121;
	st.global.u32 	[%rd280], %rd120;
	.loc 11 469 2
	add.s64 	%rd280, %rd280, 8;
	add.s64 	%rd279, %rd279, 8;
	add.s64 	%rd281, %rd281, 1;
	cvt.u32.u64 	%r126, %rd281;
	.loc 11 469 2
	setp.ne.s32 	%p13, %r75, %r126;
	@%p13 bra 	LBB10_70;
// BB#71:                               // %for.body.i.i.prol.loopexit
	.loc 11 470 12
	setp.lt.u32 	%p14, %r46, 3;
	@%p14 bra 	LBB10_74;
	bra.uni 	LBB10_72;
LBB10_47:
	mov.u64 	%rd273, 0;
	bra.uni 	LBB10_56;
LBB10_6:
	mov.u32 	%r117, -1;
	bra.uni 	LBB10_40;
LBB10_49:
	mov.u32 	%r120, 0;
	mov.u64 	%rd269, 0;
	.loc 11 470 12
	setp.lt.u32 	%p20, %r33, 3;
	@%p20 bra 	LBB10_55;
LBB10_53:                               // %for.body.i56.i.preheader.new
	sub.s32 	%r119, %r31, %r120;
	mov.u64 	%rd151, contextDic;
	mul.wide.s32 	%rd152, %r120, 8;
	add.s64 	%rd153, %rd151, %rd152;
	add.s64 	%rd271, %rd153, 16;
	add.s64 	%rd154, %rd98, %rd152;
	add.s64 	%rd270, %rd154, 24;
LBB10_54:                               // %for.body.i56.i
                                        // =>This Inner Loop Header: Depth=1
	shl.b64 	%rd155, %rd269, 3;
	add.s64 	%rd156, %rd98, %rd155;
	.loc 11 470 3
	add.s64 	%rd158, %rd151, %rd155;
	.loc 11 470 10
	ld.u32 	%rd159, [%rd156];
	ld.u32 	%rd160, [%rd156+4];
	st.global.u32 	[%rd158+4], %rd160;
	st.global.u32 	[%rd158], %rd159;
	ld.u32 	%rd161, [%rd270+-16];
	ld.u32 	%rd162, [%rd270+-12];
	st.global.u32 	[%rd271+-4], %rd162;
	st.global.u32 	[%rd271+-8], %rd161;
	ld.u32 	%rd163, [%rd270+-8];
	ld.u32 	%rd164, [%rd270+-4];
	st.global.u32 	[%rd271+4], %rd164;
	st.global.u32 	[%rd271], %rd163;
	ld.u32 	%rd165, [%rd270];
	ld.u32 	%rd166, [%rd270+4];
	st.global.u32 	[%rd271+12], %rd166;
	st.global.u32 	[%rd271+8], %rd165;
	.loc 11 469 24
	add.s32 	%r120, %r120, 4;
	.loc 11 470 12
	cvt.s64.s32 	%rd269, %r120;
	.loc 11 469 13
	add.s32 	%r119, %r119, -4;
	add.s64 	%rd271, %rd271, 32;
	add.s64 	%rd270, %rd270, 32;
	.loc 11 469 2
	setp.ne.s32 	%p21, %r119, 0;
	@%p21 bra 	LBB10_54;
LBB10_55:                               // %for.end.loopexit.i57.i
	.loc 11 470 12
	cvt.u64.u32 	%rd167, %r33;
	add.s64 	%rd273, %rd167, 1;
LBB10_56:                               // %_Z6cxtcpyP10CallSite_tS0_i.exit60.i
	.loc 11 474 9
	shl.b64 	%rd168, %rd273, 3;
	mov.u64 	%rd169, contextDic;
	add.s64 	%rd170, %rd169, %rd168;
	.loc 11 474 12
	mov.u32 	%r83, -1;
	st.global.u32 	[%rd170], %r83;
	.loc 11 518 10
	st.global.u32 	[cHeight], %r62;
	mov.u32 	%r117, 0;
	bra.uni 	LBB10_76;
LBB10_10:                               // %if.then10.i150
	//DEBUG_VALUE: cxtcpy:i <- 0
	//DEBUG_VALUE: cxtcpy:i <- 0
	.loc 11 469 2
	setp.lt.s32 	%p35, %r7, 1;
	@%p35 bra 	LBB10_11;
// BB#12:                               // %for.body.i56.i159.preheader
	.loc 11 470 12
	add.s32 	%r9, %r7, -1;
	and.b32  	%r102, %r7, 3;
	setp.eq.s32 	%p36, %r102, 0;
	@%p36 bra 	LBB10_13;
// BB#14:                               // %for.body.i56.i159.prol.preheader
	.loc 11 470 12
	cvt.u64.u32 	%rd3, %r102;
	mov.u64 	%rd248, contextDic;
	mov.u64 	%rd249, 0;
	cvt.u32.u64 	%r104, %rd3;
	mov.u64 	%rd247, %rd98;
LBB10_15:                               // %for.body.i56.i159.prol
                                        // =>This Inner Loop Header: Depth=1
	.pragma "nounroll";
	.loc 11 470 10
	ld.u32 	%rd222, [%rd247];
	ld.u32 	%rd223, [%rd247+4];
	st.global.u32 	[%rd248+4], %rd223;
	st.global.u32 	[%rd248], %rd222;
	.loc 11 469 2
	add.s64 	%rd248, %rd248, 8;
	add.s64 	%rd247, %rd247, 8;
	add.s64 	%rd249, %rd249, 1;
	cvt.u32.u64 	%r110, %rd249;
	.loc 11 469 2
	setp.ne.s32 	%p37, %r104, %r110;
	@%p37 bra 	LBB10_15;
// BB#16:                               // %for.body.i56.i159.prol.loopexit
	.loc 11 470 12
	setp.lt.u32 	%p38, %r9, 3;
	@%p38 bra 	LBB10_19;
	bra.uni 	LBB10_17;
LBB10_25:
	mov.u32 	%r117, %r17;
	bra.uni 	LBB10_40;
LBB10_68:
	mov.u32 	%r126, 0;
	mov.u64 	%rd281, 0;
	.loc 11 470 12
	setp.lt.u32 	%p14, %r46, 3;
	@%p14 bra 	LBB10_74;
LBB10_72:                               // %for.body.i.i.preheader.new
	sub.s32 	%r125, %r31, %r126;
	mul.lo.s64 	%rd122, %rd276, 120;
	mov.u64 	%rd123, contextDic;
	add.s64 	%rd124, %rd123, %rd122;
	mul.wide.s32 	%rd125, %r126, 8;
	add.s64 	%rd126, %rd124, %rd125;
	add.s64 	%rd283, %rd126, 16;
	add.s64 	%rd127, %rd98, %rd125;
	add.s64 	%rd282, %rd127, 24;
LBB10_73:                               // %for.body.i.i
                                        // =>This Inner Loop Header: Depth=1
	shl.b64 	%rd128, %rd281, 3;
	add.s64 	%rd129, %rd98, %rd128;
	.loc 11 470 3
	add.s64 	%rd133, %rd124, %rd128;
	.loc 11 470 10
	ld.u32 	%rd134, [%rd129];
	ld.u32 	%rd135, [%rd129+4];
	st.global.u32 	[%rd133+4], %rd135;
	st.global.u32 	[%rd133], %rd134;
	ld.u32 	%rd136, [%rd282+-16];
	ld.u32 	%rd137, [%rd282+-12];
	st.global.u32 	[%rd283+-4], %rd137;
	st.global.u32 	[%rd283+-8], %rd136;
	ld.u32 	%rd138, [%rd282+-8];
	ld.u32 	%rd139, [%rd282+-4];
	st.global.u32 	[%rd283+4], %rd139;
	st.global.u32 	[%rd283], %rd138;
	ld.u32 	%rd140, [%rd282];
	ld.u32 	%rd141, [%rd282+4];
	st.global.u32 	[%rd283+12], %rd141;
	st.global.u32 	[%rd283+8], %rd140;
	.loc 11 469 24
	add.s32 	%r126, %r126, 4;
	.loc 11 470 12
	cvt.s64.s32 	%rd281, %r126;
	.loc 11 469 13
	add.s32 	%r125, %r125, -4;
	add.s64 	%rd283, %rd283, 32;
	add.s64 	%rd282, %rd282, 32;
	.loc 11 469 2
	setp.ne.s32 	%p15, %r125, 0;
	@%p15 bra 	LBB10_73;
LBB10_74:                               // %for.end.loopexit.i.i
	.loc 11 470 12
	cvt.u64.u32 	%rd142, %r46;
	add.s64 	%rd105, %rd142, 1;
LBB10_75:                               // %_Z6cxtcpyP10CallSite_tS0_i.exit.i
	shl.b64 	%rd143, %rd105, 3;
	add.s64 	%rd144, %rd277, %rd143;
	.loc 11 474 12
	mov.u32 	%r76, -1;
	st.global.u32 	[%rd144], %r76;
	.loc 11 546 13
	add.s32 	%r77, %r117, 1;
	.loc 11 546 10
	st.global.u32 	[cHeight], %r77;
LBB10_76:                               // %getContextID.exit
	.loc 11 609 36
	shl.b64 	%rd171, %rd50, 5;
	add.s64 	%rd172, %rd49, %rd171;
	add.s64 	%rd286, %rd172, 24;
LBB10_77:                               // %if.end98.sink.split
	st.u32 	[%rd286], %r117;
LBB10_78:                               // %return
	.loc 11 613 1
	ret;
LBB10_9:
	mov.u64 	%rd257, contextDic;
	mov.u32 	%r117, 0;
	mov.u64 	%rd256, %rd178;
	//DEBUG_VALUE: cxtcpy:dst <- undef
	//DEBUG_VALUE: cxtcpy:height <- undef
	//DEBUG_VALUE: cxtcpy:i <- 0
	//DEBUG_VALUE: cxtcpy:i <- 0
	.loc 11 469 2
	setp.lt.s32 	%p29, %r7, 1;
	@%p29 bra 	LBB10_39;
LBB10_31:                               // %for.body.i.i195.preheader
	.loc 11 470 12
	add.s32 	%r22, %r7, -1;
	and.b32  	%r96, %r7, 3;
	setp.eq.s32 	%p30, %r96, 0;
	@%p30 bra 	LBB10_32;
// BB#33:                               // %for.body.i.i195.prol.preheader
	.loc 11 470 12
	mul.lo.s64 	%rd191, %rd256, 120;
	mov.u64 	%rd192, contextDic;
	add.s64 	%rd260, %rd192, %rd191;
	cvt.u64.u32 	%rd30, %r96;
	mov.u64 	%rd261, 0;
	cvt.u32.u64 	%r98, %rd30;
	mov.u64 	%rd259, %rd98;
LBB10_34:                               // %for.body.i.i195.prol
                                        // =>This Inner Loop Header: Depth=1
	.pragma "nounroll";
	.loc 11 470 10
	ld.u32 	%rd193, [%rd259];
	ld.u32 	%rd194, [%rd259+4];
	st.global.u32 	[%rd260+4], %rd194;
	st.global.u32 	[%rd260], %rd193;
	.loc 11 469 2
	add.s64 	%rd260, %rd260, 8;
	add.s64 	%rd259, %rd259, 8;
	add.s64 	%rd261, %rd261, 1;
	cvt.u32.u64 	%r116, %rd261;
	.loc 11 469 2
	setp.ne.s32 	%p31, %r98, %r116;
	@%p31 bra 	LBB10_34;
// BB#35:                               // %for.body.i.i195.prol.loopexit
	.loc 11 470 12
	setp.lt.u32 	%p32, %r22, 3;
	@%p32 bra 	LBB10_38;
	bra.uni 	LBB10_36;
LBB10_11:
	mov.u64 	%rd253, 0;
	bra.uni 	LBB10_20;
LBB10_59:
	mov.u32 	%r117, %r67;
	bra.uni 	LBB10_76;
LBB10_13:
	mov.u32 	%r110, 0;
	mov.u64 	%rd249, 0;
	.loc 11 470 12
	setp.lt.u32 	%p38, %r9, 3;
	@%p38 bra 	LBB10_19;
LBB10_17:                               // %for.body.i56.i159.preheader.new
	sub.s32 	%r109, %r7, %r110;
	mov.u64 	%rd224, contextDic;
	mul.wide.s32 	%rd225, %r110, 8;
	add.s64 	%rd226, %rd224, %rd225;
	add.s64 	%rd251, %rd226, 16;
	add.s64 	%rd227, %rd98, %rd225;
	add.s64 	%rd250, %rd227, 24;
LBB10_18:                               // %for.body.i56.i159
                                        // =>This Inner Loop Header: Depth=1
	shl.b64 	%rd228, %rd249, 3;
	add.s64 	%rd229, %rd98, %rd228;
	.loc 11 470 3
	add.s64 	%rd231, %rd224, %rd228;
	.loc 11 470 10
	ld.u32 	%rd232, [%rd229];
	ld.u32 	%rd233, [%rd229+4];
	st.global.u32 	[%rd231+4], %rd233;
	st.global.u32 	[%rd231], %rd232;
	ld.u32 	%rd234, [%rd250+-16];
	ld.u32 	%rd235, [%rd250+-12];
	st.global.u32 	[%rd251+-4], %rd235;
	st.global.u32 	[%rd251+-8], %rd234;
	ld.u32 	%rd236, [%rd250+-8];
	ld.u32 	%rd237, [%rd250+-4];
	st.global.u32 	[%rd251+4], %rd237;
	st.global.u32 	[%rd251], %rd236;
	ld.u32 	%rd238, [%rd250];
	ld.u32 	%rd239, [%rd250+4];
	st.global.u32 	[%rd251+12], %rd239;
	st.global.u32 	[%rd251+8], %rd238;
	.loc 11 469 24
	add.s32 	%r110, %r110, 4;
	.loc 11 470 12
	cvt.s64.s32 	%rd249, %r110;
	.loc 11 469 13
	add.s32 	%r109, %r109, -4;
	add.s64 	%rd251, %rd251, 32;
	add.s64 	%rd250, %rd250, 32;
	.loc 11 469 2
	setp.ne.s32 	%p39, %r109, 0;
	@%p39 bra 	LBB10_18;
LBB10_19:                               // %for.end.loopexit.i57.i160
	.loc 11 470 12
	cvt.u64.u32 	%rd240, %r9;
	add.s64 	%rd253, %rd240, 1;
LBB10_20:                               // %_Z6cxtcpyP10CallSite_tS0_i.exit60.i164
	.loc 11 474 9
	shl.b64 	%rd241, %rd253, 3;
	mov.u64 	%rd242, contextDic;
	add.s64 	%rd243, %rd242, %rd241;
	.loc 11 474 12
	mov.u32 	%r106, -1;
	st.global.u32 	[%rd243], %r106;
	.loc 11 518 10
	st.global.u32 	[cHeight], %r62;
	mov.u32 	%r117, 0;
	bra.uni 	LBB10_40;
LBB10_32:
	mov.u32 	%r116, 0;
	mov.u64 	%rd261, 0;
	.loc 11 470 12
	setp.lt.u32 	%p32, %r22, 3;
	@%p32 bra 	LBB10_38;
LBB10_36:                               // %for.body.i.i195.preheader.new
	sub.s32 	%r115, %r7, %r116;
	mul.lo.s64 	%rd195, %rd256, 120;
	mov.u64 	%rd196, contextDic;
	add.s64 	%rd197, %rd196, %rd195;
	mul.wide.s32 	%rd198, %r116, 8;
	add.s64 	%rd199, %rd197, %rd198;
	add.s64 	%rd263, %rd199, 16;
	add.s64 	%rd200, %rd98, %rd198;
	add.s64 	%rd262, %rd200, 24;
LBB10_37:                               // %for.body.i.i195
                                        // =>This Inner Loop Header: Depth=1
	shl.b64 	%rd201, %rd261, 3;
	add.s64 	%rd202, %rd98, %rd201;
	.loc 11 470 3
	add.s64 	%rd206, %rd197, %rd201;
	.loc 11 470 10
	ld.u32 	%rd207, [%rd202];
	ld.u32 	%rd208, [%rd202+4];
	st.global.u32 	[%rd206+4], %rd208;
	st.global.u32 	[%rd206], %rd207;
	ld.u32 	%rd209, [%rd262+-16];
	ld.u32 	%rd210, [%rd262+-12];
	st.global.u32 	[%rd263+-4], %rd210;
	st.global.u32 	[%rd263+-8], %rd209;
	ld.u32 	%rd211, [%rd262+-8];
	ld.u32 	%rd212, [%rd262+-4];
	st.global.u32 	[%rd263+4], %rd212;
	st.global.u32 	[%rd263], %rd211;
	ld.u32 	%rd213, [%rd262];
	ld.u32 	%rd214, [%rd262+4];
	st.global.u32 	[%rd263+12], %rd214;
	st.global.u32 	[%rd263+8], %rd213;
	.loc 11 469 24
	add.s32 	%r116, %r116, 4;
	.loc 11 470 12
	cvt.s64.s32 	%rd261, %r116;
	.loc 11 469 13
	add.s32 	%r115, %r115, -4;
	add.s64 	%rd263, %rd263, 32;
	add.s64 	%rd262, %rd262, 32;
	.loc 11 469 2
	setp.ne.s32 	%p33, %r115, 0;
	@%p33 bra 	LBB10_37;
LBB10_38:                               // %for.end.loopexit.i.i196
	.loc 11 470 12
	cvt.u64.u32 	%rd215, %r22;
	add.s64 	%rd178, %rd215, 1;
LBB10_39:                               // %_Z6cxtcpyP10CallSite_tS0_i.exit.i200
	shl.b64 	%rd216, %rd178, 3;
	add.s64 	%rd217, %rd257, %rd216;
	.loc 11 474 12
	mov.u32 	%r99, -1;
	st.global.u32 	[%rd217], %r99;
	.loc 11 546 13
	add.s32 	%r100, %r117, 1;
	.loc 11 546 10
	st.global.u32 	[cHeight], %r100;
LBB10_40:                               // %getContextID.exit202
	.loc 11 588 15
	shl.b64 	%rd244, %rd2, 5;
	add.s64 	%rd245, %rd1, %rd244;
	add.s64 	%rd286, %rd245, 24;
	bra.uni 	LBB10_77;
LBB10_23:
	mov.u32 	%r117, %r90;
	bra.uni 	LBB10_40;
}

	// .globl	_Z10storeLinesPvssssS_
.visible .func _Z10storeLinesPvssssS_(
	.param .b64 _Z10storeLinesPvssssS__param_0,
	.param .b32 _Z10storeLinesPvssssS__param_1,
	.param .b32 _Z10storeLinesPvssssS__param_2,
	.param .b32 _Z10storeLinesPvssssS__param_3,
	.param .b32 _Z10storeLinesPvssssS__param_4,
	.param .b64 _Z10storeLinesPvssssS__param_5
)                                       // @_Z10storeLinesPvssssS_
{
	.reg .pred 	%p<22>;
	.reg .b16 	%rs<5>;
	.reg .b32 	%r<62>;
	.reg .b64 	%rd<143>;

// BB#0:                                // %entry
	mov.u32 	%r1, %ctaid.x;
	mov.u32 	%r2, %ctaid.y;
	mov.u32 	%r28, %nctaid.x;
	.loc 11 684 26
	mad.lo.s32 	%r3, %r28, %r2, %r1;
	.loc 11 684 52
	ld.global.u32 	%r29, [CTALB];
	.loc 11 684 50
	setp.lt.u32 	%p1, %r3, %r29;
	.loc 11 684 58
	@%p1 bra 	LBB11_36;
// BB#1:                                // %lor.lhs.false
	.loc 11 684 99
	ld.global.u32 	%r30, [CTAUB];
	.loc 11 684 97
	setp.gt.u32 	%p2, %r3, %r30;
	.loc 11 684 14
	@%p2 bra 	LBB11_36;
// BB#2:                                // %if.end
	//DEBUG_VALUE: __ballot:a <- 1
	.loc 10 315 3
	mov.u32 	%r58, 1;
	// begin inline asm
	{ 
	.reg .pred 	%p1; 
	setp.ne.u32 	%p1, %r58, 0; 
	vote.ballot.b32 	%r31, %p1; 
	}
	// end inline asm
	//DEBUG_VALUE: __ballot:result <- %vreg85
	.loc 11 690 7
	ld.global.u64 	%rd50, [ccnntt];
	.loc 11 690 14
	setp.gt.u64 	%p3, %rd50, 83873280;
	.loc 11 690 7
	@%p3 bra 	LBB11_36;
// BB#3:                                // %cond.end
	ld.param.u64 	%rd49, [_Z10storeLinesPvssssS__param_5];
	//DEBUG_VALUE: storeLines:p_stackzone <- %vreg79
	ld.param.u16 	%rs4, [_Z10storeLinesPvssssS__param_4];
	//DEBUG_VALUE: storeLines:op <- %vreg78
	ld.param.u16 	%rs3, [_Z10storeLinesPvssssS__param_3];
	//DEBUG_VALUE: storeLines:colmn <- %vreg77
	ld.param.u16 	%rs2, [_Z10storeLinesPvssssS__param_2];
	//DEBUG_VALUE: storeLines:line <- %vreg76
	ld.param.u16 	%rs1, [_Z10storeLinesPvssssS__param_1];
	//DEBUG_VALUE: storeLines:size <- %vreg75
	ld.param.u64 	%rd48, [_Z10storeLinesPvssssS__param_0];
	//DEBUG_VALUE: storeLines:p <- %vreg74
	//DEBUG_VALUE: atomicAdd:val <- 1
	//DEBUG_VALUE: __ullAtomicAdd:val <- 1
	.loc 10 1526 10
	mov.u64 	%rd51, ccnntt;
	atom.global.add.u64 	%rd1, [%rd51], 1;
	.loc 11 703 6
	ld.global.u64 	%rd2, [buffer_oN_DeViCe];
	.loc 11 703 22
	setp.eq.s64 	%p4, %rd2, 0;
	.loc 11 703 6
	@%p4 bra 	LBB11_36;
// BB#4:                                // %if.end18
	.loc 11 695 12
	cvt.u32.u64 	%r33, %rd1;
	//DEBUG_VALUE: storeLines:bid <- %vreg91
	//DEBUG_VALUE: buffer_oN_DeViCe_long <- %vreg4
	//DEBUG_VALUE: buffer_oN_DeViCe_short <- %vreg4
	.loc 11 715 30
	mul.lo.s32 	%r34, %r33, 12;
	.loc 11 715 4
	mul.wide.s32 	%rd52, %r34, 2;
	add.s64 	%rd53, %rd2, %rd52;
	.loc 11 715 37
	st.u16 	[%rd53], %r1;
	.loc 11 716 37
	st.u16 	[%rd53+2], %r2;
	mov.u32 	%r35, %tid.x;
	.loc 11 717 37
	st.u16 	[%rd53+4], %r35;
	mov.u32 	%r36, %tid.y;
	.loc 11 718 37
	st.u16 	[%rd53+6], %r36;
	.loc 11 719 4
	mul.lo.s64 	%rd54, %rd1, 12884901888;
	add.s64 	%rd55, %rd54, 4294967296;
	shr.s64 	%rd56, %rd55, 29;
	add.s64 	%rd57, %rd2, %rd56;
	.loc 11 719 35
	st.u64 	[%rd57], %rd48;
	.loc 11 720 37
	st.u16 	[%rd53+16], %rs1;
	.loc 11 721 37
	st.u16 	[%rd53+18], %rs2;
	.loc 11 722 38
	st.u16 	[%rd53+20], %rs3;
	//DEBUG_VALUE: getContextID:bytesPerThread <- 120
	//DEBUG_VALUE: getContextID:p_stackzone <- %vreg79
	.loc 11 723 38
	st.u16 	[%rd53+22], %rs4;
	.loc 11 510 7
	ld.u32 	%r4, [%rd49+136];
	//DEBUG_VALUE: cxtcmp:height <- %vreg5
	//DEBUG_VALUE: cxtcpy:height <- %vreg5
	.loc 11 510 14
	setp.eq.s32 	%p5, %r4, 0;
	.loc 11 510 7
	@%p5 bra 	LBB11_36;
// BB#5:                                // %if.end.i
	.loc 11 513 6
	ld.global.u32 	%r5, [cHeight];
	.loc 11 513 13
	setp.eq.s32 	%p6, %r5, 0;
	.loc 11 513 6
	@%p6 bra 	LBB11_11;
// BB#6:                                // %for.cond.preheader.i
	//DEBUG_VALUE: getContextID:i <- 0
	mov.u64 	%rd142, 0;
	.loc 11 529 2
	setp.lt.s32 	%p7, %r5, 1;
	@%p7 bra 	LBB11_7;
// BB#8:                                // %for.body.i.preheader
	.loc 11 480 37
	setp.lt.s32 	%p8, %r4, 1;
	@%p8 bra 	LBB11_36;
// BB#9:                                // %for.body.i.preheader100
	mov.u32 	%r38, 0;
	mov.u64 	%rd131, contextDic;
	mov.u64 	%rd61, 0;
	mov.u32 	%r56, %r38;
LBB11_10:                               // %for.body.i
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB11_23 Depth 2
	mov.u32 	%r14, %r56;
	//DEBUG_VALUE: i <- 0
	//DEBUG_VALUE: i <- 0
	mov.u64 	%rd132, %rd61;
	mov.u32 	%r57, %r38;
LBB11_23:                               // %for.body.i46.i
                                        //   Parent Loop BB11_10 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	.loc 11 483 15
	add.s64 	%rd62, %rd131, %rd132;
	ld.global.u32 	%r40, [%rd62];
	.loc 11 483 28
	add.s64 	%rd63, %rd49, %rd132;
	ld.u32 	%r41, [%rd63];
	.loc 11 483 18
	setp.eq.s32 	%p9, %r40, %r41;
	.loc 11 483 8
	@%p9 bra 	LBB11_22;
	bra.uni 	LBB11_24;
LBB11_22:                               // %for.cond.i.i
                                        //   in Loop: Header=BB11_23 Depth=2
	.loc 11 482 28
	add.s32 	%r57, %r57, 1;
	//DEBUG_VALUE: i <- %vreg213
	//DEBUG_VALUE: i <- %vreg213
	.loc 11 482 17
	add.s64 	%rd132, %rd132, 8;
	.loc 11 482 2
	setp.ge.s32 	%p16, %r57, %r4;
	@%p16 bra 	LBB11_36;
	bra.uni 	LBB11_23;
LBB11_24:                               // %for.inc.i
                                        //   in Loop: Header=BB11_10 Depth=1
	.loc 11 529 26
	add.s32 	%r56, %r14, 1;
	//DEBUG_VALUE: getContextID:i <- %vreg211
	//DEBUG_VALUE: getContextID:i <- %vreg211
	.loc 11 529 2
	add.s64 	%rd131, %rd131, 120;
	.loc 11 529 15
	setp.lt.s32 	%p10, %r56, %r5;
	.loc 11 529 2
	@%p10 bra 	LBB11_10;
// BB#25:                               // %for.end.i.loopexit
	cvt.s64.s32 	%rd133, %r56;
	mul.wide.s32 	%rd64, %r14, 120;
	mov.u64 	%rd65, contextDic;
	add.s64 	%rd66, %rd65, %rd64;
	add.s64 	%rd134, %rd66, 120;
	.loc 11 465 37
	add.s32 	%r58, %r14, 2;
	//DEBUG_VALUE: cxtcpy:dst <- undef
	//DEBUG_VALUE: cxtcpy:height <- undef
	//DEBUG_VALUE: cxtcpy:i <- 0
	//DEBUG_VALUE: cxtcpy:i <- 0
	.loc 11 469 2
	setp.lt.s32 	%p11, %r4, 1;
	@%p11 bra 	LBB11_35;
	bra.uni 	LBB11_27;
LBB11_11:                               // %if.then10.i
	//DEBUG_VALUE: cxtcpy:i <- 0
	//DEBUG_VALUE: cxtcpy:i <- 0
	.loc 11 469 2
	setp.lt.s32 	%p17, %r4, 1;
	@%p17 bra 	LBB11_12;
// BB#13:                               // %for.body.i56.i.preheader
	.loc 11 470 12
	add.s32 	%r6, %r4, -1;
	and.b32  	%r48, %r4, 3;
	setp.eq.s32 	%p18, %r48, 0;
	@%p18 bra 	LBB11_14;
// BB#15:                               // %for.body.i56.i.prol.preheader
	.loc 11 470 12
	cvt.u64.u32 	%rd3, %r48;
	mov.u64 	%rd125, contextDic;
	mov.u64 	%rd126, 0;
	cvt.u32.u64 	%r50, %rd3;
	mov.u64 	%rd124, %rd49;
LBB11_16:                               // %for.body.i56.i.prol
                                        // =>This Inner Loop Header: Depth=1
	.pragma "nounroll";
	.loc 11 470 10
	ld.u32 	%rd101, [%rd124];
	ld.u32 	%rd102, [%rd124+4];
	st.global.u32 	[%rd125+4], %rd102;
	st.global.u32 	[%rd125], %rd101;
	.loc 11 469 2
	add.s64 	%rd125, %rd125, 8;
	add.s64 	%rd124, %rd124, 8;
	add.s64 	%rd126, %rd126, 1;
	cvt.u32.u64 	%r55, %rd126;
	.loc 11 469 2
	setp.ne.s32 	%p19, %r50, %r55;
	@%p19 bra 	LBB11_16;
// BB#17:                               // %for.body.i56.i.prol.loopexit
	.loc 11 470 12
	setp.lt.u32 	%p20, %r6, 3;
	@%p20 bra 	LBB11_20;
	bra.uni 	LBB11_18;
LBB11_7:
	mov.u64 	%rd134, contextDic;
	mov.u64 	%rd133, %rd142;
	//DEBUG_VALUE: cxtcpy:dst <- undef
	//DEBUG_VALUE: cxtcpy:height <- undef
	//DEBUG_VALUE: cxtcpy:i <- 0
	//DEBUG_VALUE: cxtcpy:i <- 0
	.loc 11 469 2
	setp.lt.s32 	%p11, %r4, 1;
	@%p11 bra 	LBB11_35;
LBB11_27:                               // %for.body.i.i.preheader
	.loc 11 470 12
	add.s32 	%r20, %r4, -1;
	and.b32  	%r43, %r4, 3;
	setp.eq.s32 	%p12, %r43, 0;
	@%p12 bra 	LBB11_28;
// BB#29:                               // %for.body.i.i.prol.preheader
	.loc 11 470 12
	mul.lo.s64 	%rd70, %rd133, 120;
	mov.u64 	%rd71, contextDic;
	add.s64 	%rd137, %rd71, %rd70;
	cvt.u64.u32 	%rd30, %r43;
	mov.u64 	%rd138, 0;
	cvt.u32.u64 	%r45, %rd30;
	mov.u64 	%rd136, %rd49;
LBB11_30:                               // %for.body.i.i.prol
                                        // =>This Inner Loop Header: Depth=1
	.pragma "nounroll";
	.loc 11 470 10
	ld.u32 	%rd72, [%rd136];
	ld.u32 	%rd73, [%rd136+4];
	st.global.u32 	[%rd137+4], %rd73;
	st.global.u32 	[%rd137], %rd72;
	.loc 11 469 2
	add.s64 	%rd137, %rd137, 8;
	add.s64 	%rd136, %rd136, 8;
	add.s64 	%rd138, %rd138, 1;
	cvt.u32.u64 	%r61, %rd138;
	.loc 11 469 2
	setp.ne.s32 	%p13, %r45, %r61;
	@%p13 bra 	LBB11_30;
// BB#31:                               // %for.body.i.i.prol.loopexit
	.loc 11 470 12
	setp.lt.u32 	%p14, %r20, 3;
	@%p14 bra 	LBB11_34;
	bra.uni 	LBB11_32;
LBB11_12:
	mov.u64 	%rd130, 0;
	bra.uni 	LBB11_21;
LBB11_14:
	mov.u32 	%r55, 0;
	mov.u64 	%rd126, 0;
	.loc 11 470 12
	setp.lt.u32 	%p20, %r6, 3;
	@%p20 bra 	LBB11_20;
LBB11_18:                               // %for.body.i56.i.preheader.new
	sub.s32 	%r54, %r4, %r55;
	mov.u64 	%rd103, contextDic;
	mul.wide.s32 	%rd104, %r55, 8;
	add.s64 	%rd105, %rd103, %rd104;
	add.s64 	%rd128, %rd105, 16;
	add.s64 	%rd106, %rd49, %rd104;
	add.s64 	%rd127, %rd106, 24;
LBB11_19:                               // %for.body.i56.i
                                        // =>This Inner Loop Header: Depth=1
	shl.b64 	%rd107, %rd126, 3;
	add.s64 	%rd108, %rd49, %rd107;
	.loc 11 470 3
	add.s64 	%rd110, %rd103, %rd107;
	.loc 11 470 10
	ld.u32 	%rd111, [%rd108];
	ld.u32 	%rd112, [%rd108+4];
	st.global.u32 	[%rd110+4], %rd112;
	st.global.u32 	[%rd110], %rd111;
	ld.u32 	%rd113, [%rd127+-16];
	ld.u32 	%rd114, [%rd127+-12];
	st.global.u32 	[%rd128+-4], %rd114;
	st.global.u32 	[%rd128+-8], %rd113;
	ld.u32 	%rd115, [%rd127+-8];
	ld.u32 	%rd116, [%rd127+-4];
	st.global.u32 	[%rd128+4], %rd116;
	st.global.u32 	[%rd128], %rd115;
	ld.u32 	%rd117, [%rd127];
	ld.u32 	%rd118, [%rd127+4];
	st.global.u32 	[%rd128+12], %rd118;
	st.global.u32 	[%rd128+8], %rd117;
	.loc 11 469 24
	add.s32 	%r55, %r55, 4;
	.loc 11 470 12
	cvt.s64.s32 	%rd126, %r55;
	.loc 11 469 13
	add.s32 	%r54, %r54, -4;
	add.s64 	%rd128, %rd128, 32;
	add.s64 	%rd127, %rd127, 32;
	.loc 11 469 2
	setp.ne.s32 	%p21, %r54, 0;
	@%p21 bra 	LBB11_19;
LBB11_20:                               // %for.end.loopexit.i57.i
	.loc 11 470 12
	cvt.u64.u32 	%rd119, %r6;
	add.s64 	%rd130, %rd119, 1;
LBB11_21:                               // %_Z6cxtcpyP10CallSite_tS0_i.exit60.i
	.loc 11 474 9
	shl.b64 	%rd120, %rd130, 3;
	mov.u64 	%rd121, contextDic;
	add.s64 	%rd122, %rd121, %rd120;
	.loc 11 474 12
	mov.u32 	%r51, -1;
	st.global.u32 	[%rd122], %r51;
	.loc 11 518 10
	mov.u32 	%r52, 1;
	st.global.u32 	[cHeight], %r52;
LBB11_36:                               // %cleanup.cont
	.loc 11 727 1
	ret;
LBB11_28:
	mov.u32 	%r61, 0;
	mov.u64 	%rd138, 0;
	.loc 11 470 12
	setp.lt.u32 	%p14, %r20, 3;
	@%p14 bra 	LBB11_34;
LBB11_32:                               // %for.body.i.i.preheader.new
	sub.s32 	%r60, %r4, %r61;
	mul.lo.s64 	%rd74, %rd133, 120;
	mov.u64 	%rd75, contextDic;
	add.s64 	%rd76, %rd75, %rd74;
	mul.wide.s32 	%rd77, %r61, 8;
	add.s64 	%rd78, %rd76, %rd77;
	add.s64 	%rd140, %rd78, 16;
	add.s64 	%rd79, %rd49, %rd77;
	add.s64 	%rd139, %rd79, 24;
LBB11_33:                               // %for.body.i.i
                                        // =>This Inner Loop Header: Depth=1
	shl.b64 	%rd80, %rd138, 3;
	add.s64 	%rd81, %rd49, %rd80;
	.loc 11 470 3
	add.s64 	%rd85, %rd76, %rd80;
	.loc 11 470 10
	ld.u32 	%rd86, [%rd81];
	ld.u32 	%rd87, [%rd81+4];
	st.global.u32 	[%rd85+4], %rd87;
	st.global.u32 	[%rd85], %rd86;
	ld.u32 	%rd88, [%rd139+-16];
	ld.u32 	%rd89, [%rd139+-12];
	st.global.u32 	[%rd140+-4], %rd89;
	st.global.u32 	[%rd140+-8], %rd88;
	ld.u32 	%rd90, [%rd139+-8];
	ld.u32 	%rd91, [%rd139+-4];
	st.global.u32 	[%rd140+4], %rd91;
	st.global.u32 	[%rd140], %rd90;
	ld.u32 	%rd92, [%rd139];
	ld.u32 	%rd93, [%rd139+4];
	st.global.u32 	[%rd140+12], %rd93;
	st.global.u32 	[%rd140+8], %rd92;
	.loc 11 469 24
	add.s32 	%r61, %r61, 4;
	.loc 11 470 12
	cvt.s64.s32 	%rd138, %r61;
	.loc 11 469 13
	add.s32 	%r60, %r60, -4;
	add.s64 	%rd140, %rd140, 32;
	add.s64 	%rd139, %rd139, 32;
	.loc 11 469 2
	setp.ne.s32 	%p15, %r60, 0;
	@%p15 bra 	LBB11_33;
LBB11_34:                               // %for.end.loopexit.i.i
	.loc 11 470 12
	cvt.u64.u32 	%rd94, %r20;
	add.s64 	%rd142, %rd94, 1;
LBB11_35:                               // %_Z6cxtcpyP10CallSite_tS0_i.exit.i
	shl.b64 	%rd95, %rd142, 3;
	add.s64 	%rd96, %rd134, %rd95;
	.loc 11 474 12
	mov.u32 	%r46, -1;
	st.global.u32 	[%rd96], %r46;
	.loc 11 546 10
	st.global.u32 	[cHeight], %r58;
	.loc 11 727 1
	ret;
}

	// .globl	print1
.visible .func print1(
	.param .b32 print1_param_0
)                                       // @print1
{
	.local .align 8 .b8 	__local_depot12[8];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<2>;
	.reg .b32 	%r<10>;
	.reg .b64 	%rd<6>;

// BB#0:                                // %entry
	mov.u64 	%SPL, __local_depot12;
	cvta.local.u64 	%SP, %SPL;
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %tid.y;
	.loc 11 758 18
	add.s32 	%r4, %r3, %r2;
	mov.u32 	%r5, %ctaid.x;
	.loc 11 758 32
	add.s32 	%r6, %r4, %r5;
	mov.u32 	%r7, %ctaid.y;
	.loc 11 758 58
	neg.s32 	%r8, %r7;
	.loc 11 758 6
	setp.ne.s32 	%p1, %r6, %r8;
	@%p1 bra 	LBB12_2;
// BB#1:                                // %if.then
	ld.param.u32 	%r1, [print1_param_0];
	//DEBUG_VALUE: print1:a <- %vreg2
	mov.u64 	%rd3, _$_str_$_9;
	cvta.global.u64 	%rd1, %rd3;
	add.u64 	%rd4, %SP, 0;
	add.u64 	%rd2, %SPL, 0;
	.loc 11 759 3
	st.local.u32 	[%rd2], %r1;
	{ // callseq 8
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd1;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd4;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r9, [retval0+0];
	} // callseq 8
LBB12_2:                                // %if.end
	.loc 11 761 2
	ret;
}

	// .globl	_Z6print3ii
.visible .func _Z6print3ii(
	.param .b32 _Z6print3ii_param_0,
	.param .b32 _Z6print3ii_param_1
)                                       // @_Z6print3ii
{


// BB#0:                                // %entry
	.loc 11 783 2
	ret;
}

	// .globl	print4
.visible .func print4(
	.param .b64 print4_param_0
)                                       // @print4
{
	.local .align 8 .b8 	__local_depot14[8];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<6>;

// BB#0:                                // %entry
	mov.u64 	%SPL, __local_depot14;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd1, [print4_param_0];
	mov.u64 	%rd2, _$_str_$_10;
	cvta.global.u64 	%rd3, %rd2;
	add.u64 	%rd4, %SP, 0;
	add.u64 	%rd5, %SPL, 0;
	//DEBUG_VALUE: print4:p <- %vreg0
	.loc 11 792 2
	st.local.u64 	[%rd5], %rd1;
	{ // callseq 9
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd3;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd4;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r1, [retval0+0];
	} // callseq 9
	.loc 11 794 1
	ret;
}

	// .globl	print5
.visible .func print5(
	.param .b64 print5_param_0,
	.param .b32 print5_param_1,
	.param .b32 print5_param_2,
	.param .b32 print5_param_3,
	.param .b32 print5_param_4,
	.param .b64 print5_param_5
)                                       // @print5
{
	.reg .pred 	%p<22>;
	.reg .b16 	%rs<5>;
	.reg .b32 	%r<70>;
	.reg .b64 	%rd<143>;

// BB#0:                                // %entry
	mov.u32 	%r1, %ctaid.x;
	mov.u32 	%r2, %ctaid.y;
	mov.u32 	%r32, %nctaid.x;
	.loc 11 802 19
	mad.lo.s32 	%r3, %r32, %r2, %r1;
	.loc 11 802 45
	ld.global.u32 	%r33, [CTALB];
	.loc 11 802 43
	setp.lt.u32 	%p1, %r3, %r33;
	.loc 11 802 51
	@%p1 bra 	LBB15_36;
// BB#1:                                // %lor.lhs.false
	.loc 11 802 92
	ld.global.u32 	%r34, [CTAUB];
	.loc 11 802 90
	setp.gt.u32 	%p2, %r3, %r34;
	.loc 11 802 7
	@%p2 bra 	LBB15_36;
// BB#2:                                // %if.end.i
	//DEBUG_VALUE: __ballot:a <- 1
	.loc 10 315 3
	mov.u32 	%r66, 1;
	// begin inline asm
	{ 
	.reg .pred 	%p1; 
	setp.ne.u32 	%p1, %r66, 0; 
	vote.ballot.b32 	%r35, %p1; 
	}
	// end inline asm
	//DEBUG_VALUE: __ballot:result <- %vreg89
	.loc 11 690 7
	ld.global.u64 	%rd50, [ccnntt];
	.loc 11 690 14
	setp.gt.u64 	%p3, %rd50, 83873280;
	.loc 11 690 7
	@%p3 bra 	LBB15_36;
// BB#3:                                // %cond.end.i
	ld.param.u64 	%rd49, [print5_param_5];
	//DEBUG_VALUE: print5:p_stackzone <- %vreg83
	ld.param.u32 	%r31, [print5_param_4];
	//DEBUG_VALUE: print5:op <- %vreg82
	ld.param.u32 	%r30, [print5_param_3];
	//DEBUG_VALUE: print5:scolm <- %vreg81
	ld.param.u32 	%r29, [print5_param_2];
	//DEBUG_VALUE: print5:sline <- %vreg80
	ld.param.u32 	%r28, [print5_param_1];
	//DEBUG_VALUE: print5:bits <- %vreg79
	ld.param.u64 	%rd48, [print5_param_0];
	//DEBUG_VALUE: print5:p <- %vreg78
	//DEBUG_VALUE: atomicAdd:val <- 1
	//DEBUG_VALUE: __ullAtomicAdd:val <- 1
	.loc 10 1526 10
	mov.u64 	%rd51, ccnntt;
	atom.global.add.u64 	%rd1, [%rd51], 1;
	.loc 11 703 6
	ld.global.u64 	%rd2, [buffer_oN_DeViCe];
	.loc 11 703 22
	setp.eq.s64 	%p4, %rd2, 0;
	.loc 11 703 6
	@%p4 bra 	LBB15_36;
// BB#4:                                // %if.end18.i
	.loc 11 805 35
	shr.s32 	%r37, %r28, 31;
	shr.u32 	%r38, %r37, 29;
	add.s32 	%r39, %r28, %r38;
	shr.u32 	%r40, %r39, 3;
	.loc 11 805 30
	cvt.u16.u32 	%rs1, %r40;
	//DEBUG_VALUE: storeLines:size <- %vreg3
	.loc 11 805 47
	cvt.u16.u32 	%rs2, %r29;
	//DEBUG_VALUE: storeLines:line <- %vreg4
	.loc 11 805 62
	cvt.u16.u32 	%rs3, %r30;
	//DEBUG_VALUE: storeLines:colmn <- %vreg5
	.loc 11 805 76
	cvt.u16.u32 	%rs4, %r31;
	//DEBUG_VALUE: storeLines:op <- %vreg6
	.loc 11 695 12
	cvt.u32.u64 	%r41, %rd1;
	//DEBUG_VALUE: buffer_oN_DeViCe_long <- %vreg8
	//DEBUG_VALUE: buffer_oN_DeViCe_short <- %vreg8
	.loc 11 715 30
	mul.lo.s32 	%r42, %r41, 12;
	//DEBUG_VALUE: storeLines:p <- %vreg78
	.loc 11 715 4
	mul.wide.s32 	%rd52, %r42, 2;
	add.s64 	%rd53, %rd2, %rd52;
	.loc 11 715 37
	st.u16 	[%rd53], %r1;
	.loc 11 716 37
	st.u16 	[%rd53+2], %r2;
	mov.u32 	%r43, %tid.x;
	.loc 11 717 37
	st.u16 	[%rd53+4], %r43;
	mov.u32 	%r44, %tid.y;
	.loc 11 718 37
	st.u16 	[%rd53+6], %r44;
	.loc 11 719 4
	mul.lo.s64 	%rd54, %rd1, 12884901888;
	add.s64 	%rd55, %rd54, 4294967296;
	shr.s64 	%rd56, %rd55, 29;
	add.s64 	%rd57, %rd2, %rd56;
	.loc 11 719 35
	st.u64 	[%rd57], %rd48;
	.loc 11 720 37
	st.u16 	[%rd53+16], %rs1;
	.loc 11 721 37
	st.u16 	[%rd53+18], %rs2;
	.loc 11 722 38
	st.u16 	[%rd53+20], %rs3;
	//DEBUG_VALUE: getContextID:bytesPerThread <- 120
	//DEBUG_VALUE: getContextID:p_stackzone <- %vreg83
	.loc 11 723 38
	st.u16 	[%rd53+22], %rs4;
	.loc 11 510 7
	ld.u32 	%r4, [%rd49+136];
	//DEBUG_VALUE: cxtcmp:height <- %vreg9
	//DEBUG_VALUE: cxtcpy:height <- %vreg9
	.loc 11 510 14
	setp.eq.s32 	%p5, %r4, 0;
	.loc 11 510 7
	@%p5 bra 	LBB15_36;
// BB#5:                                // %if.end.i.i
	.loc 11 513 6
	ld.global.u32 	%r5, [cHeight];
	.loc 11 513 13
	setp.eq.s32 	%p6, %r5, 0;
	.loc 11 513 6
	@%p6 bra 	LBB15_11;
// BB#6:                                // %for.cond.preheader.i.i
	//DEBUG_VALUE: getContextID:i <- 0
	mov.u64 	%rd142, 0;
	.loc 11 529 2
	setp.lt.s32 	%p7, %r5, 1;
	@%p7 bra 	LBB15_7;
// BB#8:                                // %for.body.i.preheader.i
	.loc 11 480 37
	setp.lt.s32 	%p8, %r4, 1;
	@%p8 bra 	LBB15_36;
// BB#9:                                // %for.body.i.i.preheader
	mov.u32 	%r46, 0;
	mov.u64 	%rd131, contextDic;
	mov.u64 	%rd61, 0;
	mov.u32 	%r64, %r46;
LBB15_10:                               // %for.body.i.i
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB15_23 Depth 2
	mov.u32 	%r14, %r64;
	//DEBUG_VALUE: i <- 0
	//DEBUG_VALUE: i <- 0
	mov.u64 	%rd132, %rd61;
	mov.u32 	%r65, %r46;
LBB15_23:                               // %for.body.i46.i.i
                                        //   Parent Loop BB15_10 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	.loc 11 483 15
	add.s64 	%rd62, %rd131, %rd132;
	ld.global.u32 	%r48, [%rd62];
	.loc 11 483 28
	add.s64 	%rd63, %rd49, %rd132;
	ld.u32 	%r49, [%rd63];
	.loc 11 483 18
	setp.eq.s32 	%p9, %r48, %r49;
	.loc 11 483 8
	@%p9 bra 	LBB15_22;
	bra.uni 	LBB15_24;
LBB15_22:                               // %for.cond.i.i.i
                                        //   in Loop: Header=BB15_23 Depth=2
	.loc 11 482 28
	add.s32 	%r65, %r65, 1;
	//DEBUG_VALUE: i <- %vreg221
	//DEBUG_VALUE: i <- %vreg221
	.loc 11 482 17
	add.s64 	%rd132, %rd132, 8;
	.loc 11 482 2
	setp.ge.s32 	%p16, %r65, %r4;
	@%p16 bra 	LBB15_36;
	bra.uni 	LBB15_23;
LBB15_24:                               // %for.inc.i.i
                                        //   in Loop: Header=BB15_10 Depth=1
	.loc 11 529 26
	add.s32 	%r64, %r14, 1;
	//DEBUG_VALUE: getContextID:i <- %vreg219
	//DEBUG_VALUE: getContextID:i <- %vreg219
	.loc 11 529 2
	add.s64 	%rd131, %rd131, 120;
	.loc 11 529 15
	setp.lt.s32 	%p10, %r64, %r5;
	.loc 11 529 2
	@%p10 bra 	LBB15_10;
// BB#25:                               // %for.end.i.loopexit.i
	cvt.s64.s32 	%rd133, %r64;
	mul.wide.s32 	%rd64, %r14, 120;
	mov.u64 	%rd65, contextDic;
	add.s64 	%rd66, %rd65, %rd64;
	add.s64 	%rd134, %rd66, 120;
	.loc 11 465 37
	add.s32 	%r66, %r14, 2;
	//DEBUG_VALUE: cxtcpy:dst <- undef
	//DEBUG_VALUE: cxtcpy:height <- undef
	//DEBUG_VALUE: cxtcpy:i <- 0
	//DEBUG_VALUE: cxtcpy:i <- 0
	.loc 11 469 2
	setp.lt.s32 	%p11, %r4, 1;
	@%p11 bra 	LBB15_35;
	bra.uni 	LBB15_27;
LBB15_11:                               // %if.then10.i.i
	//DEBUG_VALUE: cxtcpy:i <- 0
	//DEBUG_VALUE: cxtcpy:i <- 0
	.loc 11 469 2
	setp.lt.s32 	%p17, %r4, 1;
	@%p17 bra 	LBB15_12;
// BB#13:                               // %for.body.i56.i.i.preheader
	.loc 11 470 12
	add.s32 	%r6, %r4, -1;
	and.b32  	%r56, %r4, 3;
	setp.eq.s32 	%p18, %r56, 0;
	@%p18 bra 	LBB15_14;
// BB#15:                               // %for.body.i56.i.i.prol.preheader
	.loc 11 470 12
	cvt.u64.u32 	%rd3, %r56;
	mov.u64 	%rd125, contextDic;
	mov.u64 	%rd126, 0;
	cvt.u32.u64 	%r58, %rd3;
	mov.u64 	%rd124, %rd49;
LBB15_16:                               // %for.body.i56.i.i.prol
                                        // =>This Inner Loop Header: Depth=1
	.pragma "nounroll";
	.loc 11 470 10
	ld.u32 	%rd101, [%rd124];
	ld.u32 	%rd102, [%rd124+4];
	st.global.u32 	[%rd125+4], %rd102;
	st.global.u32 	[%rd125], %rd101;
	.loc 11 469 2
	add.s64 	%rd125, %rd125, 8;
	add.s64 	%rd124, %rd124, 8;
	add.s64 	%rd126, %rd126, 1;
	cvt.u32.u64 	%r63, %rd126;
	.loc 11 469 2
	setp.ne.s32 	%p19, %r58, %r63;
	@%p19 bra 	LBB15_16;
// BB#17:                               // %for.body.i56.i.i.prol.loopexit
	.loc 11 470 12
	setp.lt.u32 	%p20, %r6, 3;
	@%p20 bra 	LBB15_20;
	bra.uni 	LBB15_18;
LBB15_7:
	mov.u64 	%rd134, contextDic;
	mov.u64 	%rd133, %rd142;
	//DEBUG_VALUE: cxtcpy:dst <- undef
	//DEBUG_VALUE: cxtcpy:height <- undef
	//DEBUG_VALUE: cxtcpy:i <- 0
	//DEBUG_VALUE: cxtcpy:i <- 0
	.loc 11 469 2
	setp.lt.s32 	%p11, %r4, 1;
	@%p11 bra 	LBB15_35;
LBB15_27:                               // %for.body.i.i.i.preheader
	.loc 11 470 12
	add.s32 	%r20, %r4, -1;
	and.b32  	%r51, %r4, 3;
	setp.eq.s32 	%p12, %r51, 0;
	@%p12 bra 	LBB15_28;
// BB#29:                               // %for.body.i.i.i.prol.preheader
	.loc 11 470 12
	mul.lo.s64 	%rd70, %rd133, 120;
	mov.u64 	%rd71, contextDic;
	add.s64 	%rd137, %rd71, %rd70;
	cvt.u64.u32 	%rd30, %r51;
	mov.u64 	%rd138, 0;
	cvt.u32.u64 	%r53, %rd30;
	mov.u64 	%rd136, %rd49;
LBB15_30:                               // %for.body.i.i.i.prol
                                        // =>This Inner Loop Header: Depth=1
	.pragma "nounroll";
	.loc 11 470 10
	ld.u32 	%rd72, [%rd136];
	ld.u32 	%rd73, [%rd136+4];
	st.global.u32 	[%rd137+4], %rd73;
	st.global.u32 	[%rd137], %rd72;
	.loc 11 469 2
	add.s64 	%rd137, %rd137, 8;
	add.s64 	%rd136, %rd136, 8;
	add.s64 	%rd138, %rd138, 1;
	cvt.u32.u64 	%r69, %rd138;
	.loc 11 469 2
	setp.ne.s32 	%p13, %r53, %r69;
	@%p13 bra 	LBB15_30;
// BB#31:                               // %for.body.i.i.i.prol.loopexit
	.loc 11 470 12
	setp.lt.u32 	%p14, %r20, 3;
	@%p14 bra 	LBB15_34;
	bra.uni 	LBB15_32;
LBB15_12:
	mov.u64 	%rd130, 0;
	bra.uni 	LBB15_21;
LBB15_14:
	mov.u32 	%r63, 0;
	mov.u64 	%rd126, 0;
	.loc 11 470 12
	setp.lt.u32 	%p20, %r6, 3;
	@%p20 bra 	LBB15_20;
LBB15_18:                               // %for.body.i56.i.i.preheader.new
	sub.s32 	%r62, %r4, %r63;
	mov.u64 	%rd103, contextDic;
	mul.wide.s32 	%rd104, %r63, 8;
	add.s64 	%rd105, %rd103, %rd104;
	add.s64 	%rd128, %rd105, 16;
	add.s64 	%rd106, %rd49, %rd104;
	add.s64 	%rd127, %rd106, 24;
LBB15_19:                               // %for.body.i56.i.i
                                        // =>This Inner Loop Header: Depth=1
	shl.b64 	%rd107, %rd126, 3;
	add.s64 	%rd108, %rd49, %rd107;
	.loc 11 470 3
	add.s64 	%rd110, %rd103, %rd107;
	.loc 11 470 10
	ld.u32 	%rd111, [%rd108];
	ld.u32 	%rd112, [%rd108+4];
	st.global.u32 	[%rd110+4], %rd112;
	st.global.u32 	[%rd110], %rd111;
	ld.u32 	%rd113, [%rd127+-16];
	ld.u32 	%rd114, [%rd127+-12];
	st.global.u32 	[%rd128+-4], %rd114;
	st.global.u32 	[%rd128+-8], %rd113;
	ld.u32 	%rd115, [%rd127+-8];
	ld.u32 	%rd116, [%rd127+-4];
	st.global.u32 	[%rd128+4], %rd116;
	st.global.u32 	[%rd128], %rd115;
	ld.u32 	%rd117, [%rd127];
	ld.u32 	%rd118, [%rd127+4];
	st.global.u32 	[%rd128+12], %rd118;
	st.global.u32 	[%rd128+8], %rd117;
	.loc 11 469 24
	add.s32 	%r63, %r63, 4;
	.loc 11 470 12
	cvt.s64.s32 	%rd126, %r63;
	.loc 11 469 13
	add.s32 	%r62, %r62, -4;
	add.s64 	%rd128, %rd128, 32;
	add.s64 	%rd127, %rd127, 32;
	.loc 11 469 2
	setp.ne.s32 	%p21, %r62, 0;
	@%p21 bra 	LBB15_19;
LBB15_20:                               // %for.end.loopexit.i57.i.i
	.loc 11 470 12
	cvt.u64.u32 	%rd119, %r6;
	add.s64 	%rd130, %rd119, 1;
LBB15_21:                               // %_Z6cxtcpyP10CallSite_tS0_i.exit60.i.i
	.loc 11 474 9
	shl.b64 	%rd120, %rd130, 3;
	mov.u64 	%rd121, contextDic;
	add.s64 	%rd122, %rd121, %rd120;
	.loc 11 474 12
	mov.u32 	%r59, -1;
	st.global.u32 	[%rd122], %r59;
	.loc 11 518 10
	mov.u32 	%r60, 1;
	st.global.u32 	[cHeight], %r60;
LBB15_36:                               // %return
	.loc 11 809 1
	ret;
LBB15_28:
	mov.u32 	%r69, 0;
	mov.u64 	%rd138, 0;
	.loc 11 470 12
	setp.lt.u32 	%p14, %r20, 3;
	@%p14 bra 	LBB15_34;
LBB15_32:                               // %for.body.i.i.i.preheader.new
	sub.s32 	%r68, %r4, %r69;
	mul.lo.s64 	%rd74, %rd133, 120;
	mov.u64 	%rd75, contextDic;
	add.s64 	%rd76, %rd75, %rd74;
	mul.wide.s32 	%rd77, %r69, 8;
	add.s64 	%rd78, %rd76, %rd77;
	add.s64 	%rd140, %rd78, 16;
	add.s64 	%rd79, %rd49, %rd77;
	add.s64 	%rd139, %rd79, 24;
LBB15_33:                               // %for.body.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	shl.b64 	%rd80, %rd138, 3;
	add.s64 	%rd81, %rd49, %rd80;
	.loc 11 470 3
	add.s64 	%rd85, %rd76, %rd80;
	.loc 11 470 10
	ld.u32 	%rd86, [%rd81];
	ld.u32 	%rd87, [%rd81+4];
	st.global.u32 	[%rd85+4], %rd87;
	st.global.u32 	[%rd85], %rd86;
	ld.u32 	%rd88, [%rd139+-16];
	ld.u32 	%rd89, [%rd139+-12];
	st.global.u32 	[%rd140+-4], %rd89;
	st.global.u32 	[%rd140+-8], %rd88;
	ld.u32 	%rd90, [%rd139+-8];
	ld.u32 	%rd91, [%rd139+-4];
	st.global.u32 	[%rd140+4], %rd91;
	st.global.u32 	[%rd140], %rd90;
	ld.u32 	%rd92, [%rd139];
	ld.u32 	%rd93, [%rd139+4];
	st.global.u32 	[%rd140+12], %rd93;
	st.global.u32 	[%rd140+8], %rd92;
	.loc 11 469 24
	add.s32 	%r69, %r69, 4;
	.loc 11 470 12
	cvt.s64.s32 	%rd138, %r69;
	.loc 11 469 13
	add.s32 	%r68, %r68, -4;
	add.s64 	%rd140, %rd140, 32;
	add.s64 	%rd139, %rd139, 32;
	.loc 11 469 2
	setp.ne.s32 	%p15, %r68, 0;
	@%p15 bra 	LBB15_33;
LBB15_34:                               // %for.end.loopexit.i.i.i
	.loc 11 470 12
	cvt.u64.u32 	%rd94, %r20;
	add.s64 	%rd142, %rd94, 1;
LBB15_35:                               // %_Z6cxtcpyP10CallSite_tS0_i.exit.i.i
	shl.b64 	%rd95, %rd142, 3;
	add.s64 	%rd96, %rd134, %rd95;
	.loc 11 474 12
	mov.u32 	%r54, -1;
	st.global.u32 	[%rd96], %r54;
	.loc 11 546 10
	st.global.u32 	[cHeight], %r66;
	.loc 11 809 1
	ret;
}

	// .globl	RetKernel
.visible .func RetKernel(
	.param .b64 RetKernel_param_0
)                                       // @RetKernel
{
	.local .align 8 .b8 	__local_depot16[88];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<14>;
	.reg .b16 	%rs<3>;
	.reg .b32 	%r<25>;
	.reg .b64 	%rd<60>;

// BB#0:                                // %entry
	mov.u64 	%SPL, __local_depot16;
	cvta.local.u64 	%SP, %SPL;
	mov.u32 	%r6, %ctaid.x;
	mov.u32 	%r7, %ctaid.y;
	mov.u32 	%r1, %nctaid.x;
	.loc 11 814 19
	mad.lo.s32 	%r2, %r1, %r7, %r6;
	//DEBUG_VALUE: RetKernel:bid <- %vreg12
	.loc 11 814 45
	ld.global.u32 	%r8, [CTALB];
	.loc 11 814 43
	setp.lt.u32 	%p3, %r2, %r8;
	.loc 11 814 51
	@%p3 bra 	LBB16_12;
// BB#1:                                // %lor.lhs.false
	.loc 11 814 92
	ld.global.u32 	%r9, [CTAUB];
	.loc 11 814 90
	setp.gt.u32 	%p4, %r2, %r9;
	.loc 11 814 7
	@%p4 bra 	LBB16_12;
// BB#2:                                // %if.end
	ld.param.u64 	%rd19, [RetKernel_param_0];
	//DEBUG_VALUE: RetKernel:p_stackzone <- %vreg25
	mov.u32 	%r3, %tid.x;
	mov.u32 	%r10, %tid.y;
	mov.u32 	%r4, %ntid.x;
	.loc 11 821 2
	bar.sync 	0;
	//DEBUG_VALUE: RetKernel:rank <- -1
	.loc 11 818 45
	neg.s32 	%r5, %r10;
	.loc 11 823 11
	mul.lo.s32 	%r11, %r4, %r5;
	mov.pred 	%p13, 0;
	.loc 11 823 7
	setp.ne.s32 	%p6, %r3, %r11;
	@%p6 bra 	LBB16_6;
// BB#3:                                // %if.then20
	.loc 11 827 18
	setp.eq.s64 	%p7, %rd19, 0;
	.loc 11 827 7
	@%p7 bra 	LBB16_5;
// BB#4:                                // %if.then22
	mov.u64 	%rd20, _$_str_$_11;
	cvta.global.u64 	%rd1, %rd20;
	add.u64 	%rd26, %SP, 0;
	add.u64 	%rd7, %SPL, 0;
	.loc 11 829 4
	{ // callseq 10
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd19;
	call.uni 
	free, 
	(
	param0
	);
	} // callseq 10
	.loc 10 1514 10
	mov.u64 	%rd31, aliveCTA;
	atom.global.add.u32 	%r12, [%rd31], -1;
	//DEBUG_VALUE: RetKernel:rank <- %vreg49
	.loc 11 831 4
	st.local.v2.u32 	[%rd7], {%r2, %r12};
	{ // callseq 11
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd1;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd26;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r13, [retval0+0];
	} // callseq 11
	.loc 11 832 3
	setp.eq.s32 	%p13, %r12, 1;
	bra.uni 	LBB16_6;
LBB16_5:                                // %if.else
	mov.u64 	%rd21, _$_str_$_12;
	cvta.global.u64 	%rd2, %rd21;
	.loc 11 834 4
	mov.u64 	%rd33, 0;
	{ // callseq 12
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd2;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd33;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r14, [retval0+0];
	} // callseq 12
LBB16_6:                                // %if.end25
	.loc 11 836 2
	bar.sync 	0;
	.loc 11 838 32
	setp.eq.s32 	%p9, %r3, %r5;
	.loc 11 838 37
	and.pred  	%p10, %p9, %p13;
	@!%p10 bra 	LBB16_12;
	bra.uni 	LBB16_7;
LBB16_7:                                // %if.then31
	mov.u64 	%rd22, _$_str_$_13;
	mov.u64 	%rd23, _$_str_$_14;
	mov.u64 	%rd24, _$_str_$_15;
	mov.u64 	%rd25, _$_str_$_16;
	add.u64 	%rd27, %SP, 8;
	add.u64 	%rd28, %SP, 16;
	add.u64 	%rd29, %SP, 24;
	add.u64 	%rd30, %SP, 56;
	cvta.global.u64 	%rd3, %rd22;
	cvta.global.u64 	%rd4, %rd23;
	cvta.global.u64 	%rd5, %rd24;
	cvta.global.u64 	%rd6, %rd25;
	add.u64 	%rd8, %SPL, 8;
	add.u64 	%rd9, %SPL, 16;
	add.u64 	%rd10, %SPL, 24;
	add.u64 	%rd11, %SPL, 56;
	mov.u64 	%rd58, 0;
	.loc 11 840 3
	{ // callseq 13
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd3;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd58;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r15, [retval0+0];
	} // callseq 13
	.loc 11 847 45
	ld.global.u64 	%rd35, [buffer_oN_DeViCe];
	//DEBUG_VALUE: buffer_oN_DeViCe_short <- %vreg59
	.loc 11 848 32
	st.u16 	[%rd35], %r4;
	mov.u32 	%r16, %ntid.y;
	.loc 11 849 32
	st.u16 	[%rd35+2], %r16;
	.loc 11 850 32
	st.u16 	[%rd35+4], %r1;
	mov.u32 	%r17, %nctaid.y;
	.loc 11 851 32
	st.u16 	[%rd35+6], %r17;
	.loc 11 852 72
	ld.global.u64 	%rd36, [ccnntt];
	.loc 11 852 4
	st.local.u64 	[%rd8], %rd36;
	{ // callseq 14
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd4;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd27;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r18, [retval0+0];
	} // callseq 14
	.loc 11 853 72
	ld.global.u64 	%rd38, [bbccnntt];
	.loc 11 853 4
	st.local.u64 	[%rd9], %rd38;
	{ // callseq 15
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd4;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd28;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r19, [retval0+0];
	} // callseq 15
	.loc 11 855 42
	ld.global.u64 	%rd40, [buffer_oN_DeViCe];
	//DEBUG_VALUE: buffer_oN_DeViCe_long <- %vreg68
	.loc 11 856 33
	ld.global.u64 	%rd41, [ccnntt];
	//DEBUG_VALUE: offset1 <- 1024
	//DEBUG_VALUE: offset2 <- 4096
	.loc 11 856 31
	st.u64 	[%rd40+8], %rd41;
	mov.u32 	%r20, 31;
	mov.u32 	%r21, 15;
	st.local.v2.u32 	[%rd10], {%r21, %r20};
	mov.u64 	%rd42, 1;
	.loc 11 875 3
	st.local.u64 	[%rd10+8], %rd42;
	mov.u64 	%rd43, 465;
	st.local.u64 	[%rd10+16], %rd43;
	mov.u64 	%rd44, 1024;
	st.local.u64 	[%rd10+24], %rd44;
	{ // callseq 16
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd5;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd29;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r22, [retval0+0];
	} // callseq 16
	mov.u32 	%r23, 20;
	st.local.v2.u32 	[%rd11], {%r23, %r21};
	mov.u64 	%rd46, 8;
	.loc 11 877 17
	st.local.u64 	[%rd11+8], %rd46;
	mov.u64 	%rd47, 2400;
	st.local.u64 	[%rd11+16], %rd47;
	mov.u64 	%rd48, 4096;
	st.local.u64 	[%rd11+24], %rd48;
	{ // callseq 17
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd6;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd30;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r24, [retval0+0];
	} // callseq 17
	.loc 11 883 18
	ld.global.u64 	%rd12, [buffer_oN_DeViCe];
	//DEBUG_VALUE: ptr <- %vreg19
	.loc 11 883 35
	add.s64 	%rd13, %rd12, 2013264896;
LBB16_8:                                // %loadstoreloop
                                        // =>This Inner Loop Header: Depth=1
	mov.u64 	%rd50, funcDic;
	add.s64 	%rd51, %rd50, %rd58;
	ld.global.u8 	%rs1, [%rd51];
	add.s64 	%rd52, %rd13, %rd58;
	st.u8 	[%rd52], %rs1;
	add.s64 	%rd58, %rd58, 1;
	setp.lt.u64 	%p11, %rd58, 465;
	@%p11 bra 	LBB16_8;
// BB#9:                                // %split
	.loc 11 887 34
	add.s64 	%rd16, %rd12, 2013261824;
	//DEBUG_VALUE: ptr <- %vreg22
	mov.u64 	%rd59, 0;
LBB16_10:                               // %loadstoreloop13
                                        // =>This Inner Loop Header: Depth=1
	mov.u64 	%rd54, contextDic;
	add.s64 	%rd55, %rd54, %rd59;
	ld.global.u8 	%rs2, [%rd55];
	add.s64 	%rd56, %rd16, %rd59;
	st.u8 	[%rd56], %rs2;
	add.s64 	%rd59, %rd59, 1;
	setp.lt.u64 	%p12, %rd59, 2400;
	@%p12 bra 	LBB16_10;
// BB#11:                               // %split12
	.loc 11 912 10
	st.global.u64 	[ccnntt], %rd42;
	.loc 11 913 12
	st.global.u64 	[bbccnntt], %rd42;
LBB16_12:                               // %return
	.loc 11 918 1
	ret;
}

	// .globl	_Z12bicg_kernel1PfS_S_ii
.visible .entry _Z12bicg_kernel1PfS_S_ii(
	.param .u64 _Z12bicg_kernel1PfS_S_ii_param_0,
	.param .u64 _Z12bicg_kernel1PfS_S_ii_param_1,
	.param .u64 _Z12bicg_kernel1PfS_S_ii_param_2,
	.param .u32 _Z12bicg_kernel1PfS_S_ii_param_3,
	.param .u32 _Z12bicg_kernel1PfS_S_ii_param_4,
	.param .u64 _Z12bicg_kernel1PfS_S_ii_param_5
)                                       // @_Z12bicg_kernel1PfS_S_ii
{
	.reg .pred 	%p<6>;
	.reg .f32 	%f<18>;
	.reg .b32 	%r<56>;
	.reg .b64 	%rd<24>;

// BB#0:                                // %entry
	ld.param.u32 	%r12, [_Z12bicg_kernel1PfS_S_ii_param_4];
	//DEBUG_VALUE: bicg_kernel1:NY <- %vreg24
	ld.param.u32 	%r11, [_Z12bicg_kernel1PfS_S_ii_param_3];
	//DEBUG_VALUE: bicg_kernel1:NX <- %vreg23
	ld.param.u64 	%rd10, [_Z12bicg_kernel1PfS_S_ii_param_0];
	ld.param.u64 	%rd11, [_Z12bicg_kernel1PfS_S_ii_param_2];
	ld.param.u64 	%rd12, [_Z12bicg_kernel1PfS_S_ii_param_1];
	ld.param.u64 	%rd13, [_Z12bicg_kernel1PfS_S_ii_param_5];
	.loc 1 104 41
	{ // callseq 18
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd13;
	.param .b64 retval0;
	call.uni (retval0), 
	InitKernel, 
	(
	param0
	);
	ld.param.b64 	%rd4, [retval0+0];
	} // callseq 18
	mov.u32 	%r13, 1;
	mov.u32 	%r14, 104;
	mov.u32 	%r15, 41;
	{ // callseq 19
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r13;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r13;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r14;
	.param .b32 param3;
	st.param.b32 	[param3+0], %r15;
	.param .b64 param4;
	st.param.b64 	[param4+0], %rd4;
	call.uni 
	passBasicBlock, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 19
	mov.u32 	%r16, %ctaid.x;
	mov.u32 	%r17, %ntid.x;
	mov.u32 	%r18, %tid.x;
	.loc 1 106 34
	mad.lo.s32 	%r1, %r17, %r16, %r18;
	//DEBUG_VALUE: bicg_kernel1:j <- %vreg4
	.loc 1 108 6
	setp.ge.s32 	%p1, %r1, %r12;
	@%p1 bra 	LBB17_9;
// BB#1:                                // %if.then
	cvta.to.global.u64 	%rd1, %rd11;
	.loc 1 110 3
	mov.u32 	%r20, 110;
	mov.u32 	%r21, 3;
	{ // callseq 20
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r13;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r13;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r20;
	.param .b32 param3;
	st.param.b32 	[param3+0], %r21;
	.param .b64 param4;
	st.param.b64 	[param4+0], %rd4;
	call.uni 
	passBasicBlock, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 20
	mul.wide.u32 	%rd14, %r1, 4;
	add.s64 	%rd6, %rd1, %rd14;
	mov.u32 	%r53, 0;
	//DEBUG_VALUE: i <- 0
	//DEBUG_VALUE: i <- 0
	.loc 1 110 8
	st.global.u32 	[%rd6], %r53;
	.loc 1 113 3
	setp.lt.s32 	%p2, %r11, 1;
	@%p2 bra 	LBB17_9;
// BB#2:                                // %for.body.preheader
	cvta.to.global.u64 	%rd2, %rd12;
	cvta.to.global.u64 	%rd3, %rd10;
	.loc 1 115 16
	mov.u32 	%r25, 115;
	mov.u32 	%r26, 16;
	{ // callseq 21
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r13;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r13;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r25;
	.param .b32 param3;
	st.param.b32 	[param3+0], %r26;
	.param .b64 param4;
	st.param.b64 	[param4+0], %rd4;
	call.uni 
	passBasicBlock, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 21
	and.b32  	%r27, %r11, 1;
	setp.eq.b32 	%p3, %r27, 1;
	mov.f32 	%f17, 0f00000000;
	.loc 1 115 16
	@!%p3 bra 	LBB17_4;
	bra.uni 	LBB17_3;
LBB17_3:                                // %for.body.prol.preheader
	.loc 1 110 3
	cvt.u64.u32 	%rd5, %r1;
	.loc 1 115 16
	{ // callseq 22
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r13;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r13;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r25;
	.param .b32 param3;
	st.param.b32 	[param3+0], %r26;
	.param .b64 param4;
	st.param.b64 	[param4+0], %rd4;
	call.uni 
	passBasicBlock, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 22
	.loc 1 115 21
	mov.u32 	%r33, 21;
	{ // callseq 23
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r13;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r13;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r25;
	.param .b32 param3;
	st.param.b32 	[param3+0], %r33;
	.param .b64 param4;
	st.param.b64 	[param4+0], %rd4;
	call.uni 
	passBasicBlock, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 23
	shl.b64 	%rd15, %rd5, 2;
	add.s64 	%rd16, %rd3, %rd15;
	.loc 1 115 12
	ld.global.f32 	%f6, [%rd16];
	.loc 1 115 28
	ld.global.f32 	%f7, [%rd2];
	.loc 1 115 26
	mul.rn.f32 	%f8, %f6, %f7;
	.loc 1 115 9
	add.rn.f32 	%f17, %f8, 0f00000000;
	//DEBUG_VALUE: i <- 1
	//DEBUG_VALUE: i <- 1
	st.global.f32 	[%rd6], %f17;
	mov.u32 	%r53, %r13;
LBB17_4:                                // %for.body.prol.loopexit
	.loc 1 115 16
	{ // callseq 24
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r13;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r13;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r25;
	.param .b32 param3;
	st.param.b32 	[param3+0], %r26;
	.param .b64 param4;
	st.param.b64 	[param4+0], %rd4;
	call.uni 
	passBasicBlock, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 24
	setp.eq.s32 	%p4, %r11, 1;
	@%p4 bra 	LBB17_8;
// BB#5:                                // %for.body.preheader.new
	mov.u32 	%r38, 1;
	{ // callseq 25
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r38;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r38;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r25;
	.param .b32 param3;
	st.param.b32 	[param3+0], %r26;
	.param .b64 param4;
	st.param.b64 	[param4+0], %rd4;
	call.uni 
	passBasicBlock, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 25
	sub.s32 	%r55, %r11, %r53;
	mul.wide.u32 	%rd17, %r53, 4;
	add.s64 	%rd18, %rd2, %rd17;
	add.s64 	%rd23, %rd18, 4;
	add.s32 	%r41, %r53, 1;
	mad.lo.s32 	%r4, %r12, %r41, %r1;
	shl.b32 	%r5, %r12, 1;
	mad.lo.s32 	%r6, %r53, %r12, %r1;
	mov.u32 	%r54, 0;
LBB17_6:                                // %for.body
                                        // =>This Inner Loop Header: Depth=1
	.loc 1 115 16
	{ // callseq 26
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r38;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r38;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r25;
	.param .b32 param3;
	st.param.b32 	[param3+0], %r26;
	.param .b64 param4;
	st.param.b64 	[param4+0], %rd4;
	call.uni 
	passBasicBlock, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 26
	.loc 1 115 12
	add.s32 	%r45, %r6, %r54;
	mul.wide.s32 	%rd19, %r45, 4;
	add.s64 	%rd20, %rd3, %rd19;
	.loc 1 115 12
	ld.global.f32 	%f9, [%rd20];
	.loc 1 115 28
	ld.global.f32 	%f10, [%rd23+-4];
	.loc 1 115 26
	mul.rn.f32 	%f11, %f9, %f10;
	.loc 1 115 9
	add.rn.f32 	%f12, %f17, %f11;
	st.global.f32 	[%rd6], %f12;
	.loc 1 115 12
	add.s32 	%r46, %r4, %r54;
	mul.wide.s32 	%rd21, %r46, 4;
	add.s64 	%rd22, %rd3, %rd21;
	.loc 1 115 12
	ld.global.f32 	%f13, [%rd22];
	.loc 1 115 28
	ld.global.f32 	%f14, [%rd23];
	.loc 1 115 26
	mul.rn.f32 	%f15, %f13, %f14;
	.loc 1 115 9
	add.rn.f32 	%f17, %f12, %f15;
	st.global.f32 	[%rd6], %f17;
	.loc 1 113 16
	add.s32 	%r55, %r55, -2;
	add.s64 	%rd23, %rd23, 8;
	add.s32 	%r54, %r54, %r5;
	.loc 1 113 3
	setp.ne.s32 	%p5, %r55, 0;
	@%p5 bra 	LBB17_6;
// BB#7:                                // %if.end.loopexit.unr-lcssa
	.loc 1 118 1
	mov.u32 	%r47, 118;
	{ // callseq 27
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r38;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r38;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r47;
	.param .b32 param3;
	st.param.b32 	[param3+0], %r38;
	.param .b64 param4;
	st.param.b64 	[param4+0], %rd4;
	call.uni 
	passBasicBlock, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 27
LBB17_8:                                // %if.end.loopexit
	mov.u32 	%r49, 118;
	mov.u32 	%r50, 1;
	{ // callseq 28
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r50;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r50;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r49;
	.param .b32 param3;
	st.param.b32 	[param3+0], %r50;
	.param .b64 param4;
	st.param.b64 	[param4+0], %rd4;
	call.uni 
	passBasicBlock, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 28
LBB17_9:                                // %if.end
	mov.u32 	%r51, 118;
	{ // callseq 29
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r13;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r13;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r51;
	.param .b32 param3;
	st.param.b32 	[param3+0], %r13;
	.param .b64 param4;
	st.param.b64 	[param4+0], %rd4;
	call.uni 
	passBasicBlock, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 29
	{ // callseq 30
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd4;
	call.uni 
	RetKernel, 
	(
	param0
	);
	} // callseq 30
	ret;
}

	// .globl	_Z12bicg_kernel2PfS_S_ii
.visible .entry _Z12bicg_kernel2PfS_S_ii(
	.param .u64 _Z12bicg_kernel2PfS_S_ii_param_0,
	.param .u64 _Z12bicg_kernel2PfS_S_ii_param_1,
	.param .u64 _Z12bicg_kernel2PfS_S_ii_param_2,
	.param .u32 _Z12bicg_kernel2PfS_S_ii_param_3,
	.param .u32 _Z12bicg_kernel2PfS_S_ii_param_4,
	.param .u64 _Z12bicg_kernel2PfS_S_ii_param_5
)                                       // @_Z12bicg_kernel2PfS_S_ii
{
	.reg .pred 	%p<6>;
	.reg .f32 	%f<18>;
	.reg .b32 	%r<51>;
	.reg .b64 	%rd<21>;

// BB#0:                                // %entry
	ld.param.u32 	%r10, [_Z12bicg_kernel2PfS_S_ii_param_4];
	//DEBUG_VALUE: bicg_kernel2:NY <- %vreg21
	ld.param.u64 	%rd9, [_Z12bicg_kernel2PfS_S_ii_param_0];
	ld.param.u64 	%rd10, [_Z12bicg_kernel2PfS_S_ii_param_2];
	ld.param.u64 	%rd11, [_Z12bicg_kernel2PfS_S_ii_param_1];
	ld.param.u32 	%r11, [_Z12bicg_kernel2PfS_S_ii_param_3];
	//DEBUG_VALUE: bicg_kernel2:NX <- %vreg25
	ld.param.u64 	%rd12, [_Z12bicg_kernel2PfS_S_ii_param_5];
	.loc 1 122 41
	{ // callseq 31
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd12;
	.param .b64 retval0;
	call.uni (retval0), 
	InitKernel, 
	(
	param0
	);
	ld.param.b64 	%rd4, [retval0+0];
	} // callseq 31
	mov.u32 	%r12, 1;
	mov.u32 	%r13, 122;
	mov.u32 	%r14, 41;
	{ // callseq 32
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r12;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r12;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r13;
	.param .b32 param3;
	st.param.b32 	[param3+0], %r14;
	.param .b64 param4;
	st.param.b64 	[param4+0], %rd4;
	call.uni 
	passBasicBlock, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 32
	mov.u32 	%r15, %ctaid.x;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	.loc 1 124 34
	mad.lo.s32 	%r1, %r16, %r15, %r17;
	//DEBUG_VALUE: bicg_kernel2:i <- %vreg4
	.loc 1 126 6
	setp.ge.s32 	%p1, %r1, %r11;
	@%p1 bra 	LBB18_9;
// BB#1:                                // %if.then
	cvta.to.global.u64 	%rd1, %rd10;
	.loc 1 128 3
	mov.u32 	%r19, 128;
	mov.u32 	%r20, 3;
	{ // callseq 33
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r12;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r12;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r19;
	.param .b32 param3;
	st.param.b32 	[param3+0], %r20;
	.param .b64 param4;
	st.param.b64 	[param4+0], %rd4;
	call.uni 
	passBasicBlock, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 33
	mul.wide.u32 	%rd13, %r1, 4;
	add.s64 	%rd5, %rd1, %rd13;
	mov.u32 	%r48, 0;
	//DEBUG_VALUE: j <- 0
	//DEBUG_VALUE: j <- 0
	.loc 1 128 8
	st.global.u32 	[%rd5], %r48;
	.loc 1 131 3
	setp.lt.s32 	%p2, %r10, 1;
	@%p2 bra 	LBB18_9;
// BB#2:                                // %for.body.lr.ph
	cvta.to.global.u64 	%rd2, %rd11;
	cvta.to.global.u64 	%rd3, %rd9;
	.loc 1 131 3
	mov.u32 	%r24, 131;
	{ // callseq 34
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r12;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r12;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r24;
	.param .b32 param3;
	st.param.b32 	[param3+0], %r20;
	.param .b64 param4;
	st.param.b64 	[param4+0], %rd4;
	call.uni 
	passBasicBlock, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 34
	mul.lo.s32 	%r2, %r1, %r10;
	.loc 1 131 3
	and.b32  	%r26, %r10, 1;
	setp.eq.b32 	%p3, %r26, 1;
	mov.f32 	%f17, 0f00000000;
	.loc 1 131 3
	@!%p3 bra 	LBB18_4;
	bra.uni 	LBB18_3;
LBB18_3:                                // %for.body.prol.preheader
	{ // callseq 35
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r12;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r12;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r24;
	.param .b32 param3;
	st.param.b32 	[param3+0], %r20;
	.param .b64 param4;
	st.param.b64 	[param4+0], %rd4;
	call.uni 
	passBasicBlock, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 35
	.loc 1 133 12
	mov.u32 	%r31, 133;
	mov.u32 	%r32, 12;
	{ // callseq 36
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r12;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r12;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r31;
	.param .b32 param3;
	st.param.b32 	[param3+0], %r32;
	.param .b64 param4;
	st.param.b64 	[param4+0], %rd4;
	call.uni 
	passBasicBlock, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 36
	mul.wide.s32 	%rd14, %r2, 4;
	add.s64 	%rd15, %rd3, %rd14;
	.loc 1 133 12
	ld.global.f32 	%f6, [%rd15];
	.loc 1 133 28
	ld.global.f32 	%f7, [%rd2];
	.loc 1 133 26
	mul.rn.f32 	%f8, %f6, %f7;
	.loc 1 133 9
	add.rn.f32 	%f17, %f8, 0f00000000;
	//DEBUG_VALUE: j <- 1
	//DEBUG_VALUE: j <- 1
	st.global.f32 	[%rd5], %f17;
	mov.u32 	%r48, %r12;
LBB18_4:                                // %for.body.prol.loopexit
	.loc 1 131 3
	{ // callseq 37
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r12;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r12;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r24;
	.param .b32 param3;
	st.param.b32 	[param3+0], %r20;
	.param .b64 param4;
	st.param.b64 	[param4+0], %rd4;
	call.uni 
	passBasicBlock, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 37
	setp.eq.s32 	%p4, %r10, 1;
	@%p4 bra 	LBB18_8;
// BB#5:                                // %for.body.lr.ph.new
	mov.u32 	%r36, 1;
	{ // callseq 38
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r36;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r36;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r24;
	.param .b32 param3;
	st.param.b32 	[param3+0], %r20;
	.param .b64 param4;
	st.param.b64 	[param4+0], %rd4;
	call.uni 
	passBasicBlock, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 38
	sub.s32 	%r50, %r10, %r48;
	mul.wide.u32 	%rd16, %r48, 4;
	add.s64 	%rd17, %rd2, %rd16;
	add.s64 	%rd20, %rd17, 4;
	add.s32 	%r49, %r48, %r2;
LBB18_6:                                // %for.body
                                        // =>This Inner Loop Header: Depth=1
	.loc 1 133 21
	mov.u32 	%r40, 133;
	mov.u32 	%r41, 21;
	{ // callseq 39
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r36;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r36;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r40;
	.param .b32 param3;
	st.param.b32 	[param3+0], %r41;
	.param .b64 param4;
	st.param.b64 	[param4+0], %rd4;
	call.uni 
	passBasicBlock, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 39
	mul.wide.s32 	%rd18, %r49, 4;
	add.s64 	%rd19, %rd3, %rd18;
	.loc 1 133 12
	ld.global.f32 	%f9, [%rd19];
	.loc 1 133 28
	ld.global.f32 	%f10, [%rd20+-4];
	.loc 1 133 26
	mul.rn.f32 	%f11, %f9, %f10;
	.loc 1 133 9
	add.rn.f32 	%f12, %f17, %f11;
	st.global.f32 	[%rd5], %f12;
	.loc 1 133 12
	ld.global.f32 	%f13, [%rd19+4];
	.loc 1 133 28
	ld.global.f32 	%f14, [%rd20];
	.loc 1 133 26
	mul.rn.f32 	%f15, %f13, %f14;
	.loc 1 133 9
	add.rn.f32 	%f17, %f12, %f15;
	st.global.f32 	[%rd5], %f17;
	.loc 1 131 14
	add.s32 	%r50, %r50, -2;
	add.s64 	%rd20, %rd20, 8;
	add.s32 	%r49, %r49, 2;
	.loc 1 131 3
	setp.ne.s32 	%p5, %r50, 0;
	@%p5 bra 	LBB18_6;
// BB#7:                                // %if.end.loopexit.unr-lcssa
	.loc 1 136 1
	mov.u32 	%r42, 136;
	{ // callseq 40
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r36;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r36;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r42;
	.param .b32 param3;
	st.param.b32 	[param3+0], %r36;
	.param .b64 param4;
	st.param.b64 	[param4+0], %rd4;
	call.uni 
	passBasicBlock, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 40
LBB18_8:                                // %if.end.loopexit
	mov.u32 	%r44, 136;
	mov.u32 	%r45, 1;
	{ // callseq 41
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r45;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r45;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r44;
	.param .b32 param3;
	st.param.b32 	[param3+0], %r45;
	.param .b64 param4;
	st.param.b64 	[param4+0], %rd4;
	call.uni 
	passBasicBlock, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 41
LBB18_9:                                // %if.end
	mov.u32 	%r46, 136;
	{ // callseq 42
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r12;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r12;
	.param .b32 param2;
	st.param.b32 	[param2+0], %r46;
	.param .b32 param3;
	st.param.b32 	[param3+0], %r12;
	.param .b64 param4;
	st.param.b64 	[param4+0], %rd4;
	call.uni 
	passBasicBlock, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 42
	{ // callseq 43
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd4;
	call.uni 
	RetKernel, 
	(
	param0
	);
	} // callseq 43
	ret;
}


